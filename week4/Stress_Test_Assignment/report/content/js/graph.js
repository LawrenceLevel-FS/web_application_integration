/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 3561.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 5.0], [8.1, 5.0], [8.2, 5.0], [8.3, 5.0], [8.4, 5.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 8.0], [9.6, 8.0], [9.7, 9.0], [9.8, 9.0], [9.9, 9.0], [10.0, 9.0], [10.1, 9.0], [10.2, 9.0], [10.3, 9.0], [10.4, 10.0], [10.5, 10.0], [10.6, 10.0], [10.7, 10.0], [10.8, 10.0], [10.9, 10.0], [11.0, 10.0], [11.1, 10.0], [11.2, 11.0], [11.3, 11.0], [11.4, 11.0], [11.5, 11.0], [11.6, 12.0], [11.7, 12.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 14.0], [12.3, 14.0], [12.4, 15.0], [12.5, 15.0], [12.6, 16.0], [12.7, 17.0], [12.8, 17.0], [12.9, 18.0], [13.0, 19.0], [13.1, 19.0], [13.2, 19.0], [13.3, 19.0], [13.4, 19.0], [13.5, 19.0], [13.6, 19.0], [13.7, 20.0], [13.8, 20.0], [13.9, 20.0], [14.0, 20.0], [14.1, 20.0], [14.2, 21.0], [14.3, 21.0], [14.4, 21.0], [14.5, 21.0], [14.6, 22.0], [14.7, 23.0], [14.8, 23.0], [14.9, 24.0], [15.0, 24.0], [15.1, 24.0], [15.2, 25.0], [15.3, 25.0], [15.4, 26.0], [15.5, 26.0], [15.6, 26.0], [15.7, 26.0], [15.8, 27.0], [15.9, 27.0], [16.0, 27.0], [16.1, 27.0], [16.2, 28.0], [16.3, 28.0], [16.4, 28.0], [16.5, 28.0], [16.6, 29.0], [16.7, 29.0], [16.8, 29.0], [16.9, 30.0], [17.0, 30.0], [17.1, 31.0], [17.2, 31.0], [17.3, 32.0], [17.4, 32.0], [17.5, 32.0], [17.6, 33.0], [17.7, 34.0], [17.8, 35.0], [17.9, 36.0], [18.0, 37.0], [18.1, 38.0], [18.2, 39.0], [18.3, 40.0], [18.4, 42.0], [18.5, 42.0], [18.6, 43.0], [18.7, 44.0], [18.8, 45.0], [18.9, 46.0], [19.0, 46.0], [19.1, 47.0], [19.2, 47.0], [19.3, 48.0], [19.4, 48.0], [19.5, 49.0], [19.6, 49.0], [19.7, 50.0], [19.8, 51.0], [19.9, 52.0], [20.0, 53.0], [20.1, 54.0], [20.2, 56.0], [20.3, 57.0], [20.4, 58.0], [20.5, 58.0], [20.6, 59.0], [20.7, 61.0], [20.8, 62.0], [20.9, 62.0], [21.0, 63.0], [21.1, 64.0], [21.2, 65.0], [21.3, 65.0], [21.4, 66.0], [21.5, 67.0], [21.6, 68.0], [21.7, 69.0], [21.8, 70.0], [21.9, 71.0], [22.0, 72.0], [22.1, 73.0], [22.2, 74.0], [22.3, 75.0], [22.4, 75.0], [22.5, 75.0], [22.6, 75.0], [22.7, 76.0], [22.8, 76.0], [22.9, 76.0], [23.0, 76.0], [23.1, 77.0], [23.2, 77.0], [23.3, 78.0], [23.4, 78.0], [23.5, 79.0], [23.6, 80.0], [23.7, 80.0], [23.8, 82.0], [23.9, 83.0], [24.0, 84.0], [24.1, 85.0], [24.2, 86.0], [24.3, 87.0], [24.4, 87.0], [24.5, 88.0], [24.6, 88.0], [24.7, 89.0], [24.8, 89.0], [24.9, 90.0], [25.0, 91.0], [25.1, 91.0], [25.2, 92.0], [25.3, 93.0], [25.4, 94.0], [25.5, 95.0], [25.6, 95.0], [25.7, 96.0], [25.8, 98.0], [25.9, 98.0], [26.0, 99.0], [26.1, 99.0], [26.2, 100.0], [26.3, 100.0], [26.4, 100.0], [26.5, 100.0], [26.6, 100.0], [26.7, 100.0], [26.8, 100.0], [26.9, 100.0], [27.0, 100.0], [27.1, 100.0], [27.2, 100.0], [27.3, 100.0], [27.4, 100.0], [27.5, 100.0], [27.6, 100.0], [27.7, 101.0], [27.8, 101.0], [27.9, 101.0], [28.0, 101.0], [28.1, 101.0], [28.2, 101.0], [28.3, 101.0], [28.4, 101.0], [28.5, 101.0], [28.6, 101.0], [28.7, 101.0], [28.8, 101.0], [28.9, 101.0], [29.0, 101.0], [29.1, 101.0], [29.2, 101.0], [29.3, 101.0], [29.4, 101.0], [29.5, 101.0], [29.6, 101.0], [29.7, 101.0], [29.8, 101.0], [29.9, 101.0], [30.0, 101.0], [30.1, 101.0], [30.2, 101.0], [30.3, 101.0], [30.4, 101.0], [30.5, 101.0], [30.6, 101.0], [30.7, 101.0], [30.8, 102.0], [30.9, 102.0], [31.0, 102.0], [31.1, 102.0], [31.2, 102.0], [31.3, 102.0], [31.4, 102.0], [31.5, 102.0], [31.6, 102.0], [31.7, 102.0], [31.8, 102.0], [31.9, 102.0], [32.0, 102.0], [32.1, 102.0], [32.2, 102.0], [32.3, 102.0], [32.4, 102.0], [32.5, 103.0], [32.6, 103.0], [32.7, 103.0], [32.8, 103.0], [32.9, 103.0], [33.0, 104.0], [33.1, 104.0], [33.2, 104.0], [33.3, 105.0], [33.4, 105.0], [33.5, 105.0], [33.6, 106.0], [33.7, 106.0], [33.8, 106.0], [33.9, 106.0], [34.0, 106.0], [34.1, 106.0], [34.2, 107.0], [34.3, 107.0], [34.4, 107.0], [34.5, 107.0], [34.6, 107.0], [34.7, 107.0], [34.8, 108.0], [34.9, 108.0], [35.0, 108.0], [35.1, 108.0], [35.2, 108.0], [35.3, 108.0], [35.4, 108.0], [35.5, 109.0], [35.6, 109.0], [35.7, 109.0], [35.8, 109.0], [35.9, 109.0], [36.0, 109.0], [36.1, 109.0], [36.2, 109.0], [36.3, 110.0], [36.4, 110.0], [36.5, 110.0], [36.6, 110.0], [36.7, 110.0], [36.8, 110.0], [36.9, 111.0], [37.0, 111.0], [37.1, 112.0], [37.2, 112.0], [37.3, 112.0], [37.4, 112.0], [37.5, 113.0], [37.6, 113.0], [37.7, 113.0], [37.8, 113.0], [37.9, 113.0], [38.0, 114.0], [38.1, 114.0], [38.2, 114.0], [38.3, 114.0], [38.4, 114.0], [38.5, 114.0], [38.6, 114.0], [38.7, 115.0], [38.8, 115.0], [38.9, 115.0], [39.0, 115.0], [39.1, 115.0], [39.2, 116.0], [39.3, 116.0], [39.4, 116.0], [39.5, 117.0], [39.6, 117.0], [39.7, 117.0], [39.8, 117.0], [39.9, 118.0], [40.0, 118.0], [40.1, 118.0], [40.2, 118.0], [40.3, 118.0], [40.4, 119.0], [40.5, 119.0], [40.6, 119.0], [40.7, 119.0], [40.8, 119.0], [40.9, 119.0], [41.0, 119.0], [41.1, 120.0], [41.2, 120.0], [41.3, 120.0], [41.4, 120.0], [41.5, 120.0], [41.6, 120.0], [41.7, 120.0], [41.8, 120.0], [41.9, 121.0], [42.0, 121.0], [42.1, 121.0], [42.2, 121.0], [42.3, 122.0], [42.4, 122.0], [42.5, 122.0], [42.6, 122.0], [42.7, 123.0], [42.8, 123.0], [42.9, 124.0], [43.0, 124.0], [43.1, 124.0], [43.2, 125.0], [43.3, 125.0], [43.4, 125.0], [43.5, 125.0], [43.6, 126.0], [43.7, 126.0], [43.8, 126.0], [43.9, 126.0], [44.0, 127.0], [44.1, 127.0], [44.2, 128.0], [44.3, 128.0], [44.4, 128.0], [44.5, 129.0], [44.6, 129.0], [44.7, 130.0], [44.8, 130.0], [44.9, 131.0], [45.0, 131.0], [45.1, 132.0], [45.2, 132.0], [45.3, 133.0], [45.4, 133.0], [45.5, 134.0], [45.6, 134.0], [45.7, 135.0], [45.8, 136.0], [45.9, 137.0], [46.0, 137.0], [46.1, 138.0], [46.2, 139.0], [46.3, 140.0], [46.4, 140.0], [46.5, 141.0], [46.6, 142.0], [46.7, 142.0], [46.8, 144.0], [46.9, 145.0], [47.0, 145.0], [47.1, 146.0], [47.2, 148.0], [47.3, 149.0], [47.4, 149.0], [47.5, 150.0], [47.6, 150.0], [47.7, 150.0], [47.8, 150.0], [47.9, 151.0], [48.0, 151.0], [48.1, 151.0], [48.2, 152.0], [48.3, 153.0], [48.4, 153.0], [48.5, 153.0], [48.6, 154.0], [48.7, 155.0], [48.8, 155.0], [48.9, 155.0], [49.0, 156.0], [49.1, 157.0], [49.2, 157.0], [49.3, 158.0], [49.4, 159.0], [49.5, 160.0], [49.6, 161.0], [49.7, 161.0], [49.8, 162.0], [49.9, 162.0], [50.0, 163.0], [50.1, 164.0], [50.2, 164.0], [50.3, 165.0], [50.4, 165.0], [50.5, 166.0], [50.6, 166.0], [50.7, 167.0], [50.8, 167.0], [50.9, 168.0], [51.0, 168.0], [51.1, 168.0], [51.2, 169.0], [51.3, 170.0], [51.4, 170.0], [51.5, 171.0], [51.6, 171.0], [51.7, 171.0], [51.8, 172.0], [51.9, 172.0], [52.0, 172.0], [52.1, 173.0], [52.2, 173.0], [52.3, 173.0], [52.4, 174.0], [52.5, 175.0], [52.6, 175.0], [52.7, 176.0], [52.8, 176.0], [52.9, 177.0], [53.0, 177.0], [53.1, 178.0], [53.2, 178.0], [53.3, 178.0], [53.4, 178.0], [53.5, 179.0], [53.6, 179.0], [53.7, 179.0], [53.8, 180.0], [53.9, 181.0], [54.0, 182.0], [54.1, 183.0], [54.2, 185.0], [54.3, 186.0], [54.4, 188.0], [54.5, 189.0], [54.6, 191.0], [54.7, 192.0], [54.8, 194.0], [54.9, 196.0], [55.0, 199.0], [55.1, 199.0], [55.2, 200.0], [55.3, 200.0], [55.4, 200.0], [55.5, 200.0], [55.6, 200.0], [55.7, 200.0], [55.8, 200.0], [55.9, 201.0], [56.0, 201.0], [56.1, 201.0], [56.2, 201.0], [56.3, 201.0], [56.4, 201.0], [56.5, 201.0], [56.6, 201.0], [56.7, 201.0], [56.8, 201.0], [56.9, 201.0], [57.0, 201.0], [57.1, 201.0], [57.2, 201.0], [57.3, 201.0], [57.4, 201.0], [57.5, 201.0], [57.6, 201.0], [57.7, 202.0], [57.8, 202.0], [57.9, 202.0], [58.0, 202.0], [58.1, 202.0], [58.2, 202.0], [58.3, 202.0], [58.4, 202.0], [58.5, 202.0], [58.6, 202.0], [58.7, 202.0], [58.8, 202.0], [58.9, 202.0], [59.0, 202.0], [59.1, 202.0], [59.2, 202.0], [59.3, 202.0], [59.4, 202.0], [59.5, 202.0], [59.6, 203.0], [59.7, 203.0], [59.8, 203.0], [59.9, 203.0], [60.0, 203.0], [60.1, 203.0], [60.2, 203.0], [60.3, 203.0], [60.4, 204.0], [60.5, 204.0], [60.6, 204.0], [60.7, 205.0], [60.8, 206.0], [60.9, 206.0], [61.0, 207.0], [61.1, 207.0], [61.2, 208.0], [61.3, 208.0], [61.4, 208.0], [61.5, 209.0], [61.6, 209.0], [61.7, 210.0], [61.8, 210.0], [61.9, 210.0], [62.0, 211.0], [62.1, 212.0], [62.2, 212.0], [62.3, 213.0], [62.4, 213.0], [62.5, 214.0], [62.6, 214.0], [62.7, 214.0], [62.8, 215.0], [62.9, 216.0], [63.0, 217.0], [63.1, 218.0], [63.2, 219.0], [63.3, 219.0], [63.4, 219.0], [63.5, 220.0], [63.6, 220.0], [63.7, 220.0], [63.8, 220.0], [63.9, 221.0], [64.0, 221.0], [64.1, 222.0], [64.2, 222.0], [64.3, 223.0], [64.4, 223.0], [64.5, 224.0], [64.6, 225.0], [64.7, 225.0], [64.8, 226.0], [64.9, 227.0], [65.0, 227.0], [65.1, 229.0], [65.2, 230.0], [65.3, 230.0], [65.4, 231.0], [65.5, 232.0], [65.6, 233.0], [65.7, 233.0], [65.8, 234.0], [65.9, 235.0], [66.0, 237.0], [66.1, 239.0], [66.2, 240.0], [66.3, 241.0], [66.4, 243.0], [66.5, 245.0], [66.6, 246.0], [66.7, 247.0], [66.8, 248.0], [66.9, 249.0], [67.0, 251.0], [67.1, 252.0], [67.2, 253.0], [67.3, 254.0], [67.4, 254.0], [67.5, 256.0], [67.6, 258.0], [67.7, 260.0], [67.8, 260.0], [67.9, 261.0], [68.0, 261.0], [68.1, 262.0], [68.2, 264.0], [68.3, 264.0], [68.4, 265.0], [68.5, 265.0], [68.6, 266.0], [68.7, 267.0], [68.8, 268.0], [68.9, 268.0], [69.0, 269.0], [69.1, 270.0], [69.2, 271.0], [69.3, 272.0], [69.4, 273.0], [69.5, 273.0], [69.6, 274.0], [69.7, 276.0], [69.8, 277.0], [69.9, 278.0], [70.0, 278.0], [70.1, 279.0], [70.2, 279.0], [70.3, 280.0], [70.4, 280.0], [70.5, 282.0], [70.6, 282.0], [70.7, 283.0], [70.8, 284.0], [70.9, 287.0], [71.0, 288.0], [71.1, 289.0], [71.2, 290.0], [71.3, 293.0], [71.4, 295.0], [71.5, 298.0], [71.6, 300.0], [71.7, 300.0], [71.8, 301.0], [71.9, 301.0], [72.0, 301.0], [72.1, 301.0], [72.2, 301.0], [72.3, 302.0], [72.4, 302.0], [72.5, 302.0], [72.6, 302.0], [72.7, 302.0], [72.8, 302.0], [72.9, 302.0], [73.0, 303.0], [73.1, 303.0], [73.2, 303.0], [73.3, 303.0], [73.4, 303.0], [73.5, 304.0], [73.6, 304.0], [73.7, 306.0], [73.8, 307.0], [73.9, 307.0], [74.0, 308.0], [74.1, 309.0], [74.2, 309.0], [74.3, 309.0], [74.4, 310.0], [74.5, 310.0], [74.6, 310.0], [74.7, 311.0], [74.8, 311.0], [74.9, 311.0], [75.0, 312.0], [75.1, 312.0], [75.2, 313.0], [75.3, 314.0], [75.4, 316.0], [75.5, 318.0], [75.6, 319.0], [75.7, 319.0], [75.8, 320.0], [75.9, 320.0], [76.0, 320.0], [76.1, 320.0], [76.2, 321.0], [76.3, 321.0], [76.4, 321.0], [76.5, 322.0], [76.6, 322.0], [76.7, 322.0], [76.8, 323.0], [76.9, 323.0], [77.0, 323.0], [77.1, 324.0], [77.2, 325.0], [77.3, 326.0], [77.4, 327.0], [77.5, 328.0], [77.6, 329.0], [77.7, 330.0], [77.8, 331.0], [77.9, 332.0], [78.0, 333.0], [78.1, 334.0], [78.2, 336.0], [78.3, 337.0], [78.4, 341.0], [78.5, 344.0], [78.6, 346.0], [78.7, 347.0], [78.8, 349.0], [78.9, 350.0], [79.0, 352.0], [79.1, 353.0], [79.2, 355.0], [79.3, 356.0], [79.4, 358.0], [79.5, 360.0], [79.6, 361.0], [79.7, 362.0], [79.8, 363.0], [79.9, 365.0], [80.0, 366.0], [80.1, 367.0], [80.2, 368.0], [80.3, 369.0], [80.4, 370.0], [80.5, 370.0], [80.6, 371.0], [80.7, 372.0], [80.8, 373.0], [80.9, 373.0], [81.0, 375.0], [81.1, 377.0], [81.2, 378.0], [81.3, 378.0], [81.4, 379.0], [81.5, 379.0], [81.6, 380.0], [81.7, 381.0], [81.8, 382.0], [81.9, 382.0], [82.0, 384.0], [82.1, 385.0], [82.2, 388.0], [82.3, 389.0], [82.4, 391.0], [82.5, 394.0], [82.6, 398.0], [82.7, 400.0], [82.8, 401.0], [82.9, 401.0], [83.0, 401.0], [83.1, 402.0], [83.2, 402.0], [83.3, 402.0], [83.4, 402.0], [83.5, 402.0], [83.6, 403.0], [83.7, 403.0], [83.8, 403.0], [83.9, 403.0], [84.0, 404.0], [84.1, 406.0], [84.2, 407.0], [84.3, 408.0], [84.4, 409.0], [84.5, 410.0], [84.6, 410.0], [84.7, 410.0], [84.8, 411.0], [84.9, 412.0], [85.0, 414.0], [85.1, 414.0], [85.2, 415.0], [85.3, 417.0], [85.4, 420.0], [85.5, 423.0], [85.6, 424.0], [85.7, 425.0], [85.8, 427.0], [85.9, 431.0], [86.0, 432.0], [86.1, 433.0], [86.2, 435.0], [86.3, 437.0], [86.4, 440.0], [86.5, 443.0], [86.6, 446.0], [86.7, 448.0], [86.8, 451.0], [86.9, 453.0], [87.0, 456.0], [87.1, 457.0], [87.2, 459.0], [87.3, 460.0], [87.4, 462.0], [87.5, 462.0], [87.6, 463.0], [87.7, 464.0], [87.8, 465.0], [87.9, 466.0], [88.0, 469.0], [88.1, 470.0], [88.2, 471.0], [88.3, 472.0], [88.4, 474.0], [88.5, 477.0], [88.6, 478.0], [88.7, 479.0], [88.8, 480.0], [88.9, 481.0], [89.0, 482.0], [89.1, 483.0], [89.2, 484.0], [89.3, 485.0], [89.4, 488.0], [89.5, 492.0], [89.6, 495.0], [89.7, 501.0], [89.8, 502.0], [89.9, 502.0], [90.0, 503.0], [90.1, 504.0], [90.2, 505.0], [90.3, 506.0], [90.4, 507.0], [90.5, 508.0], [90.6, 509.0], [90.7, 509.0], [90.8, 510.0], [90.9, 510.0], [91.0, 511.0], [91.1, 511.0], [91.2, 512.0], [91.3, 513.0], [91.4, 514.0], [91.5, 515.0], [91.6, 517.0], [91.7, 518.0], [91.8, 519.0], [91.9, 519.0], [92.0, 520.0], [92.1, 520.0], [92.2, 521.0], [92.3, 521.0], [92.4, 522.0], [92.5, 524.0], [92.6, 526.0], [92.7, 529.0], [92.8, 530.0], [92.9, 531.0], [93.0, 532.0], [93.1, 533.0], [93.2, 536.0], [93.3, 537.0], [93.4, 538.0], [93.5, 542.0], [93.6, 547.0], [93.7, 548.0], [93.8, 551.0], [93.9, 554.0], [94.0, 560.0], [94.1, 564.0], [94.2, 566.0], [94.3, 570.0], [94.4, 572.0], [94.5, 574.0], [94.6, 578.0], [94.7, 579.0], [94.8, 580.0], [94.9, 581.0], [95.0, 583.0], [95.1, 586.0], [95.2, 588.0], [95.3, 594.0], [95.4, 606.0], [95.5, 627.0], [95.6, 637.0], [95.7, 643.0], [95.8, 648.0], [95.9, 661.0], [96.0, 673.0], [96.1, 675.0], [96.2, 681.0], [96.3, 683.0], [96.4, 684.0], [96.5, 686.0], [96.6, 698.0], [96.7, 702.0], [96.8, 703.0], [96.9, 704.0], [97.0, 705.0], [97.1, 708.0], [97.2, 716.0], [97.3, 720.0], [97.4, 722.0], [97.5, 739.0], [97.6, 769.0], [97.7, 780.0], [97.8, 800.0], [97.9, 808.0], [98.0, 813.0], [98.1, 834.0], [98.2, 848.0], [98.3, 853.0], [98.4, 865.0], [98.5, 868.0], [98.6, 877.0], [98.7, 882.0], [98.8, 897.0], [98.9, 1101.0], [99.0, 1103.0], [99.1, 1116.0], [99.2, 1146.0], [99.3, 1153.0], [99.4, 1157.0], [99.5, 1181.0], [99.6, 1201.0], [99.7, 1210.0], [99.8, 1223.0], [99.9, 1919.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5783.0, "series": [{"data": [[0.0, 5239.0], [600.0, 253.0], [700.0, 235.0], [200.0, 3287.0], [800.0, 202.0], [3500.0, 17.0], [900.0, 8.0], [1000.0, 3.0], [1100.0, 142.0], [300.0, 2219.0], [1200.0, 52.0], [100.0, 5783.0], [400.0, 1404.0], [1900.0, 16.0], [500.0, 1139.0], [2000.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 33.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 15172.0, "series": [{"data": [[0.0, 4390.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 405.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 33.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 15172.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2327.0740499999965, "minX": 1.73242164E12, "maxY": 2327.0740499999965, "series": [{"data": [[1.73242164E12, 2327.0740499999965]], "isOverall": false, "label": "Stress Thread Group Assignment", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73242164E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 3534.0, "series": [{"data": [[2.0, 1.0], [3.0, 1753.5], [4.0, 1754.0], [5.0, 1756.5], [6.0, 1756.5], [7.0, 1755.5], [8.0, 2340.666666666667], [9.0, 2343.0], [10.0, 3516.0], [11.0, 3.0], [12.0, 3515.0], [13.0, 1758.0], [14.0, 3512.5], [16.0, 1758.0], [17.0, 3534.0], [19.0, 1904.5], [20.0, 1908.0], [21.0, 1906.0], [22.0, 1904.0], [23.0, 1912.0], [24.0, 1920.0], [25.0, 1919.0], [26.0, 1919.0], [27.0, 1919.0], [28.0, 1917.0], [29.0, 1915.0], [30.0, 1914.0], [31.0, 1912.0], [33.0, 552.5], [32.0, 1910.0], [35.0, 552.0], [34.0, 552.0], [37.0, 735.6666666666667], [36.0, 1.0], [39.0, 552.0], [38.0, 1.0], [41.0, 3.0], [40.0, 554.0], [43.0, 3.0], [42.0, 3.0], [45.0, 3.0], [44.0, 3.0], [47.0, 3.0], [46.0, 3.0], [48.0, 3.0], [51.0, 551.5], [50.0, 934.6153846153846], [53.0, 1103.0], [52.0, 0.0], [55.0, 1.0], [54.0, 1103.0], [57.0, 1.0], [56.0, 1102.0], [59.0, 1099.0], [58.0, 1100.6666666666667], [61.0, 551.0], [60.0, 351.5], [63.0, 0.0], [62.0, 552.0], [67.0, 736.6666666666667], [66.0, 1.0], [65.0, 351.5], [64.0, 903.0], [71.0, 2.0], [70.0, 356.0], [69.0, 1.0], [68.0, 1.0], [75.0, 146.0], [74.0, 146.0], [73.0, 146.0], [72.0, 663.2], [79.0, 145.0], [78.0, 145.0], [77.0, 146.0], [76.0, 146.0], [83.0, 144.0], [82.0, 145.0], [81.0, 145.0], [80.0, 145.0], [87.0, 142.0], [86.0, 142.0], [85.0, 143.0], [84.0, 143.0], [91.0, 142.0], [90.0, 140.0], [89.0, 141.0], [88.0, 141.0], [95.0, 141.0], [94.0, 142.0], [93.0, 142.0], [92.0, 142.0], [99.0, 139.0], [98.0, 140.0], [97.0, 140.0], [96.0, 140.0], [103.0, 138.0], [102.0, 139.0], [101.0, 139.0], [100.0, 139.0], [107.0, 138.0], [106.0, 138.0], [105.0, 139.0], [104.0, 139.0], [111.0, 137.0], [110.0, 137.0], [109.0, 137.0], [108.0, 138.0], [115.0, 236.0], [114.0, 236.0], [113.0, 237.0], [112.0, 136.0], [119.0, 137.0], [118.0, 137.0], [117.0, 137.0], [116.0, 137.0], [123.0, 134.0], [122.0, 135.0], [121.0, 135.0], [120.0, 136.0], [127.0, 133.0], [126.0, 133.0], [125.0, 134.0], [124.0, 134.0], [135.0, 133.0], [134.0, 133.0], [133.0, 134.0], [132.0, 134.0], [131.0, 133.0], [130.0, 133.0], [129.0, 132.0], [128.0, 133.0], [143.0, 800.3333333333333], [142.0, 1.0], [141.0, 1.0], [140.0, 799.6666666666667], [139.0, 1.0], [138.0, 738.0], [137.0, 1.0], [136.0, 132.0], [151.0, 133.0], [150.0, 134.0], [149.0, 134.0], [148.0, 132.0], [147.0, 133.0], [146.0, 735.0], [145.0, 131.0], [144.0, 131.0], [159.0, 130.0], [158.0, 130.0], [157.0, 132.0], [156.0, 132.0], [155.0, 132.0], [154.0, 133.0], [153.0, 133.0], [152.0, 133.0], [167.0, 1.0], [166.0, 2.0], [165.0, 1.0], [164.0, 731.0], [163.0, 127.0], [162.0, 128.5], [160.0, 129.0], [175.0, 127.0], [174.0, 127.0], [173.0, 227.0], [172.0, 227.0], [171.0, 227.0], [170.0, 228.0], [169.0, 295.5], [168.0, 481.0], [183.0, 123.0], [182.0, 124.0], [181.0, 124.0], [180.0, 124.0], [179.0, 124.0], [178.0, 126.0], [177.0, 126.0], [176.0, 126.0], [191.0, 120.0], [190.0, 120.0], [189.0, 120.0], [188.0, 121.0], [187.0, 121.0], [185.0, 122.0], [184.0, 123.0], [199.0, 117.0], [198.0, 117.0], [197.0, 117.0], [196.0, 119.0], [195.0, 118.0], [194.0, 119.0], [193.0, 119.0], [192.0, 120.0], [207.0, 117.0], [206.0, 117.0], [205.0, 118.0], [204.0, 118.0], [203.0, 217.0], [202.0, 218.0], [201.0, 116.0], [200.0, 116.0], [215.0, 115.0], [214.0, 115.0], [213.0, 115.0], [212.0, 115.0], [211.0, 116.0], [210.0, 116.0], [209.0, 116.0], [208.0, 117.0], [222.0, 2.0], [221.0, 2.0], [220.0, 111.0], [219.0, 112.0], [218.0, 112.0], [217.0, 113.0], [216.0, 113.0], [231.0, 110.0], [230.0, 710.0], [229.0, 211.0], [228.0, 435.75], [227.0, 560.5], [226.0, 110.0], [225.0, 2.0], [224.0, 56.5], [239.0, 107.0], [238.0, 108.0], [237.0, 108.0], [236.0, 108.0], [234.0, 109.0], [233.0, 109.0], [232.0, 109.0], [247.0, 2.0], [246.0, 104.0], [245.0, 1.0], [244.0, 104.0], [243.0, 104.0], [242.0, 105.0], [241.0, 106.0], [240.0, 106.0], [255.0, 103.0], [254.0, 2.0], [253.0, 103.0], [252.0, 103.0], [251.0, 204.0], [250.0, 279.75], [249.0, 104.0], [248.0, 2.0], [270.0, 711.0], [271.0, 710.0], [269.0, 711.0], [268.0, 106.0], [267.0, 106.0], [266.0, 107.0], [265.0, 108.0], [264.0, 104.0], [263.0, 404.0], [257.0, 252.5], [256.0, 102.0], [259.0, 705.0], [258.0, 102.0], [262.0, 703.0], [261.0, 352.5], [286.0, 505.0], [287.0, 706.0], [285.0, 105.0], [284.0, 708.0], [283.0, 907.0], [282.0, 404.0], [280.0, 705.0], [279.0, 705.0], [273.0, 708.0], [272.0, 710.0], [275.0, 708.0], [274.0, 708.0], [278.0, 2.0], [277.0, 706.0], [276.0, 708.0], [302.0, 701.0], [303.0, 203.0], [301.0, 0.0], [300.0, 703.0], [299.0, 703.0], [298.0, 703.0], [297.0, 703.0], [296.0, 704.0], [295.0, 704.0], [289.0, 707.0], [288.0, 707.0], [291.0, 705.0], [290.0, 707.0], [294.0, 704.0], [293.0, 705.0], [292.0, 705.0], [318.0, 105.0], [319.0, 1107.0], [317.0, 706.0], [316.0, 734.0], [315.0, 705.0], [314.0, 1105.0], [313.0, 703.0], [312.0, 703.0], [311.0, 705.0], [305.0, 706.0], [304.0, 203.0], [307.0, 706.0], [306.0, 706.0], [310.0, 705.0], [309.0, 705.0], [308.0, 706.0], [334.0, 1.0], [335.0, 1147.0], [333.0, 1148.0], [332.0, 246.0], [331.0, 340.0], [330.0, 339.0], [329.0, 134.0], [328.0, 130.0], [327.0, 126.0], [321.0, 743.0], [320.0, 2.0], [323.0, 262.5], [322.0, 2.0], [326.0, 123.0], [325.0, 327.0], [324.0, 123.0], [350.0, 57.0], [351.0, 58.0], [349.0, 58.0], [348.0, 58.0], [347.0, 58.0], [346.0, 157.0], [345.0, 57.0], [344.0, 56.0], [343.0, 57.0], [337.0, 1150.0], [336.0, 797.5], [339.0, 52.0], [338.0, 150.0], [342.0, 153.0], [341.0, 52.0], [340.0, 52.0], [366.0, 168.0], [367.0, 67.0], [365.0, 216.5], [364.0, 62.0], [363.0, 1.0], [362.0, 59.0], [361.0, 61.0], [360.0, 58.0], [359.0, 57.0], [353.0, 57.0], [352.0, 58.0], [355.0, 57.0], [354.0, 58.0], [357.0, 58.0], [356.0, 57.0], [382.0, 133.5], [383.0, 165.5], [381.0, 165.0], [380.0, 1.0], [379.0, 66.0], [378.0, 1.0], [377.0, 66.0], [376.0, 67.0], [375.0, 67.0], [369.0, 67.0], [368.0, 68.0], [371.0, 166.0], [370.0, 67.0], [374.0, 66.0], [373.0, 66.0], [372.0, 67.0], [397.0, 1.0], [399.0, 34.0], [396.0, 468.0], [387.0, 65.0], [386.0, 65.0], [385.0, 165.0], [384.0, 64.0], [395.0, 66.0], [394.0, 66.0], [393.0, 66.0], [392.0, 65.0], [391.0, 66.0], [390.0, 64.0], [389.0, 65.0], [388.0, 65.0], [414.0, 1.0], [415.0, 2.0], [413.0, 284.5], [412.0, 290.5], [411.0, 139.5], [410.0, 74.0], [409.0, 1.0], [408.0, 1.0], [407.0, 230.25], [401.0, 1.0], [400.0, 336.0], [403.0, 73.0], [402.0, 71.0], [406.0, 374.0], [405.0, 2.0], [404.0, 238.0], [430.0, 82.0], [431.0, 82.0], [429.0, 182.0], [428.0, 182.0], [427.0, 182.0], [426.0, 283.0], [425.0, 181.0], [424.0, 179.0], [423.0, 179.0], [417.0, 220.0], [416.0, 381.0], [419.0, 180.0], [418.0, 278.5], [422.0, 179.0], [421.0, 179.0], [420.0, 179.0], [434.0, 82.0], [441.0, 140.5], [440.0, 3.0], [439.0, 255.33333333333331], [438.0, 1.0], [437.0, 291.5], [436.0, 81.0], [435.0, 1.0], [433.0, 82.0], [432.0, 82.0], [470.0, 580.0], [465.0, 2.0], [483.0, 579.0], [480.0, 2.0], [510.0, 379.0], [500.0, 2.0], [499.0, 478.0], [530.0, 31.5], [518.0, 34.25], [532.0, 44.0], [534.0, 26.5], [536.0, 43.5], [542.0, 1.0], [540.0, 1.0], [516.0, 378.0], [512.0, 2.0], [546.0, 48.0], [568.0, 579.0], [582.0, 53.0], [580.0, 478.0], [576.0, 290.0], [628.0, 42.0], [636.0, 52.0], [630.0, 58.5], [632.0, 57.5], [634.0, 59.0], [608.0, 174.0], [640.0, 34.0], [642.0, 31.666666666666668], [644.0, 29.5], [646.0, 23.4], [658.0, 380.0], [654.0, 376.0], [648.0, 1.0], [684.0, 71.0], [686.0, 67.0], [692.0, 73.0], [694.0, 67.25000000000001], [698.0, 78.0], [680.0, 581.0], [722.0, 47.0], [734.0, 45.333333333333336], [716.0, 39.0], [726.0, 28.25], [724.0, 29.0], [740.0, 56.42857142857143], [738.0, 51.666666666666664], [760.0, 26.285714285714285], [742.0, 1.0], [766.0, 595.0], [752.0, 55.0], [736.0, 27.0], [746.0, 35.333333333333336], [748.0, 58.0], [750.0, 487.0], [754.0, 74.9], [756.0, 24.4], [758.0, 46.4], [772.0, 58.5], [774.0, 31.0], [776.0, 112.0], [778.0, 2.0], [770.0, 1.0], [798.0, 99.5], [794.0, 3.0], [792.0, 257.5], [806.0, 128.5], [800.0, 4.0], [812.0, 97.25000000000001], [810.0, 268.0], [802.0, 150.0], [830.0, 103.0], [828.0, 6.0], [826.0, 303.66666666666663], [822.0, 67.0], [816.0, 419.5], [838.0, 605.0], [860.0, 86.73684210526316], [862.0, 140.42857142857144], [856.0, 268.0], [852.0, 66.0], [850.0, 367.0], [846.0, 317.0], [840.0, 5.0], [836.0, 300.75], [834.0, 269.0], [832.0, 270.0], [868.0, 132.45], [864.0, 79.80000000000001], [870.0, 59.07692307692307], [882.0, 189.0], [880.0, 361.0], [886.0, 361.0], [894.0, 98.5], [888.0, 186.33333333333331], [866.0, 139.53846153846158], [872.0, 105.375], [874.0, 115.0], [876.0, 100.2], [878.0, 317.5], [922.0, 2.0], [910.0, 120.2], [908.0, 201.0], [916.0, 166.5], [920.0, 131.0], [900.0, 312.0], [898.0, 61.0], [896.0, 63.0], [902.0, 63.0], [924.0, 563.0], [918.0, 362.0], [914.0, 493.3333333333333], [904.0, 210.5], [954.0, 119.33333333333333], [942.0, 232.5], [952.0, 161.11111111111111], [934.0, 161.0], [932.0, 161.0], [928.0, 261.0], [940.0, 115.33333333333334], [938.0, 161.4], [936.0, 210.33333333333334], [956.0, 369.2], [944.0, 227.66666666666666], [950.0, 0.0], [948.0, 161.0], [984.0, 256.6666666666667], [972.0, 50.599999999999994], [970.0, 211.5], [968.0, 317.5], [976.0, 3.0], [986.0, 159.5], [978.0, 161.5], [982.0, 113.33333333333334], [990.0, 456.0], [980.0, 163.0], [974.0, 58.0], [962.0, 59.0], [998.0, 136.75], [994.0, 101.0], [1006.0, 188.75], [992.0, 458.0], [996.0, 28.6], [1010.0, 779.3333333333334], [1022.0, 0.0], [1008.0, 53.0], [1016.0, 242.24999999999997], [1018.0, 403.5], [1020.0, 51.8], [1014.0, 99.39999999999999], [1012.0, 1100.6666666666667], [1000.0, 2.0], [1004.0, 179.88888888888886], [1002.0, 144.0], [1036.0, 122.0], [1028.0, 222.5], [1032.0, 300.0], [1024.0, 150.83333333333334], [1048.0, 200.83333333333331], [1052.0, 99.5], [1044.0, 135.57142857142856], [1076.0, 76.25], [1072.0, 3.0], [1080.0, 148.5], [1060.0, 158.66666666666669], [1064.0, 101.72727272727273], [1068.0, 104.0], [1040.0, 99.5], [1148.0, 89.66666666666667], [1092.0, 3.0], [1088.0, 2.0], [1120.0, 224.5], [1144.0, 148.76470588235296], [1136.0, 49.75], [1100.0, 47.0], [1096.0, 26.0], [1124.0, 187.0], [1128.0, 7.0], [1132.0, 103.66666666666666], [1104.0, 1.5], [1108.0, 354.5], [1116.0, 68.66666666666667], [1152.0, 221.91666666666669], [1160.0, 96.75], [1176.0, 118.66666666666667], [1180.0, 46.666666666666664], [1172.0, 96.5], [1168.0, 76.71428571428571], [1164.0, 35.0], [1184.0, 81.6], [1188.0, 71.66666666666667], [1200.0, 149.5], [1192.0, 154.10344827586206], [1196.0, 120.5], [1268.0, 6.0], [1272.0, 6.0], [1264.0, 3.5], [1224.0, 286.4705882352941], [1260.0, 5.0], [1256.0, 137.0], [1252.0, 4.0], [1248.0, 3.5], [1244.0, 5.0], [1232.0, 3.0], [1336.0, 109.33333333333334], [1288.0, 143.6], [1304.0, 181.5], [1308.0, 7.5], [1280.0, 106.0], [1284.0, 6.5], [1292.0, 5.5], [1312.0, 30.5], [1316.0, 74.66666666666667], [1296.0, 321.7142857142857], [1300.0, 409.0], [1332.0, 8.75], [1328.0, 109.0], [1324.0, 208.66666666666666], [1320.0, 9.0], [1392.0, 209.75], [1368.0, 2.0], [1376.0, 40.333333333333336], [1380.0, 2.0], [1384.0, 2.0], [1400.0, 9.666666666666666], [1372.0, 9.0], [1348.0, 367.8571428571429], [1344.0, 9.0], [1364.0, 45.333333333333336], [1356.0, 208.66666666666666], [1352.0, 159.5], [1468.0, 80.57142857142857], [1444.0, 37.66666666666667], [1456.0, 40.0], [1416.0, 10.0], [1412.0, 209.0], [1408.0, 9.0], [1448.0, 221.0], [1464.0, 10.0], [1460.0, 10.0], [1452.0, 210.0], [1440.0, 10.0], [1432.0, 10.0], [1424.0, 10.0], [1484.0, 68.5], [1492.0, 105.28571428571429], [1488.0, 165.6], [1496.0, 39.0], [1504.0, 38.11111111111111], [1508.0, 54.27272727272728], [1528.0, 122.92307692307693], [1532.0, 11.0], [1520.0, 82.5], [1524.0, 320.75], [1516.0, 71.2272727272727], [1512.0, 316.50000000000006], [1476.0, 148.28571428571428], [1480.0, 98.5], [1472.0, 89.85714285714286], [1500.0, 125.00000000000001], [1548.0, 98.77777777777777], [1544.0, 227.85714285714286], [1540.0, 174.0], [1564.0, 271.9090909090909], [1536.0, 268.5], [1560.0, 133.5], [1556.0, 9.333333333333334], [1552.0, 109.0], [1568.0, 96.00000000000001], [1592.0, 162.6], [1588.0, 168.1333333333333], [1584.0, 149.68750000000003], [1572.0, 269.75], [1580.0, 342.0], [1576.0, 9.0], [1656.0, 298.55555555555554], [1632.0, 125.0], [1612.0, 192.66666666666666], [1600.0, 332.0], [1608.0, 342.5], [1616.0, 160.0], [1624.0, 109.5], [1620.0, 85.75], [1628.0, 437.75], [1648.0, 354.0], [1652.0, 357.4], [1660.0, 249.125], [1636.0, 170.04166666666663], [1640.0, 6.4], [1644.0, 353.0], [1676.0, 176.0], [1672.0, 190.96153846153842], [1692.0, 270.5], [1664.0, 234.0], [1668.0, 32.0], [1720.0, 121.24999999999999], [1716.0, 22.0], [1712.0, 220.0], [1724.0, 21.0], [1700.0, 222.0], [1680.0, 83.16666666666666], [1688.0, 196.375], [1684.0, 161.7142857142857], [1704.0, 140.5], [1708.0, 187.33333333333334], [1780.0, 311.8], [1752.0, 106.69230769230768], [1772.0, 344.2307692307692], [1788.0, 274.0], [1784.0, 319.0], [1764.0, 313.0], [1760.0, 92.33333333333334], [1768.0, 342.3333333333333], [1740.0, 200.8], [1776.0, 228.63157894736844], [1748.0, 43.0], [1736.0, 107.66666666666666], [1756.0, 79.0], [1732.0, 221.0], [1728.0, 222.0], [1744.0, 88.5], [1852.0, 108.66666666666667], [1824.0, 102.30000000000001], [1832.0, 143.45454545454547], [1836.0, 130.25], [1828.0, 270.45454545454544], [1808.0, 129.50000000000003], [1812.0, 48.5], [1820.0, 153.92307692307693], [1816.0, 184.5], [1792.0, 98.15789473684211], [1840.0, 71.25], [1848.0, 120.0], [1844.0, 170.0], [1804.0, 152.5], [1800.0, 29.0], [1796.0, 23.666666666666668], [1908.0, 66.0], [1860.0, 119.25], [1884.0, 112.0], [1856.0, 308.0], [1868.0, 266.5], [1864.0, 20.5], [1912.0, 209.75], [1916.0, 110.5], [1888.0, 3.0], [1896.0, 1.0], [1880.0, 2.0], [1872.0, 181.66666666666669], [1876.0, 260.8], [1968.0, 243.63636363636365], [1920.0, 3.0], [1932.0, 202.0], [1924.0, 219.25], [1948.0, 110.66666666666667], [1980.0, 346.1666666666667], [1944.0, 141.5], [1960.0, 104.39999999999999], [1964.0, 208.4], [1972.0, 260.75], [1976.0, 337.5], [1936.0, 304.0], [1940.0, 157.0], [1956.0, 128.42857142857142], [1952.0, 2.0], [2040.0, 61.5], [2028.0, 227.64285714285714], [2000.0, 367.15384615384613], [2004.0, 203.5], [2012.0, 226.125], [1984.0, 118.0], [2008.0, 97.0], [1988.0, 93.27777777777777], [2036.0, 283.3333333333333], [2032.0, 288.8], [1992.0, 352.0], [1996.0, 19.0], [2020.0, 354.7], [2024.0, 279.0], [2016.0, 91.5], [2044.0, 20.0], [2072.0, 200.97142857142856], [2104.0, 249.71428571428572], [2096.0, 136.64285714285714], [2120.0, 357.14285714285717], [2136.0, 125.16666666666667], [2112.0, 90.16666666666666], [2168.0, 83.33333333333333], [2160.0, 157.2], [2144.0, 229.58333333333334], [2152.0, 319.44444444444446], [2064.0, 118.44444444444444], [2056.0, 107.3], [2048.0, 187.7027027027028], [2088.0, 116.29411764705883], [2080.0, 152.5], [2128.0, 186.53333333333333], [2280.0, 144.61538461538458], [2248.0, 322.3333333333333], [2296.0, 2.0], [2240.0, 269.33333333333337], [2288.0, 371.5], [2264.0, 278.59999999999997], [2208.0, 191.66666666666666], [2176.0, 144.75], [2192.0, 101.0], [2272.0, 195.42857142857144], [2200.0, 113.8], [2216.0, 155.83333333333334], [2232.0, 231.22222222222223], [2224.0, 348.14285714285717], [2256.0, 308.2], [2408.0, 195.40816326530611], [2352.0, 148.7142857142857], [2344.0, 126.9], [2376.0, 249.07142857142856], [2368.0, 69.28571428571429], [2384.0, 260.06249999999994], [2392.0, 174.0], [2336.0, 222.87500000000003], [2328.0, 242.7142857142857], [2400.0, 275.3846153846154], [2320.0, 152.4], [2304.0, 217.84000000000003], [2312.0, 13.0], [2360.0, 118.0], [2424.0, 125.37499999999999], [2416.0, 135.0], [2456.0, 191.875], [2536.0, 126.85714285714283], [2440.0, 212.7857142857143], [2448.0, 94.0], [2528.0, 135.6], [2496.0, 70.5], [2552.0, 1.0], [2544.0, 407.0], [2520.0, 179.04347826086956], [2512.0, 219.02325581395354], [2472.0, 63.99999999999999], [2464.0, 122.0], [2480.0, 56.8], [2488.0, 146.08333333333334], [2432.0, 272.0], [2576.0, 210.0], [2616.0, 168.50000000000003], [2568.0, 256.9285714285714], [2560.0, 2.0], [2608.0, 111.0], [2600.0, 191.22222222222223], [2592.0, 339.6666666666667], [2656.0, 88.83333333333333], [2584.0, 507.0], [2672.0, 213.375], [2664.0, 504.0], [2624.0, 1.5], [2680.0, 100.22222222222223], [2640.0, 44.666666666666664], [2648.0, 137.07142857142856], [2688.0, 251.12], [2736.0, 7.0], [2744.0, 1.8], [2808.0, 144.0], [2752.0, 177.4], [2728.0, 197.16666666666666], [2720.0, 134.875], [2712.0, 230.25], [2704.0, 64.5], [2696.0, 182.1], [2784.0, 125.0], [2760.0, 173.33333333333334], [2776.0, 101.90909090909089], [2800.0, 67.0], [2792.0, 403.0], [2912.0, 18.333333333333332], [2920.0, 1.5], [2832.0, 195.85714285714286], [2840.0, 298.57894736842104], [2936.0, 3.6], [2872.0, 251.625], [2824.0, 3.0], [2816.0, 1.0], [2864.0, 225.14814814814815], [2856.0, 1.0], [2848.0, 63.5], [2880.0, 650.0], [2904.0, 156.0], [2896.0, 202.0], [2960.0, 492.0], [2944.0, 5.0], [2968.0, 513.0], [3000.0, 17.0], [2992.0, 2.0], [2984.0, 27.0], [3016.0, 117.0], [3024.0, 4.666666666666667], [3008.0, 2.0], [3184.0, 356.3225806451613], [3072.0, 342.6], [3080.0, 180.0], [3104.0, 309.25806451612897], [3136.0, 127.33333333333333], [3144.0, 317.75], [3152.0, 279.9090909090909], [3160.0, 389.2], [3192.0, 464.0526315789474], [3176.0, 469.5454545454545], [3168.0, 462.90000000000003], [3096.0, 193.6153846153846], [3088.0, 127.00000000000003], [3128.0, 567.7777777777777], [3120.0, 298.8571428571429], [3112.0, 203.70000000000002], [3264.0, 48.0], [3240.0, 101.0], [3272.0, 70.33333333333333], [3320.0, 404.88235294117646], [3280.0, 52.0], [3312.0, 183.8], [3304.0, 208.0], [3296.0, 75.28571428571429], [3328.0, 68.6], [3336.0, 144.28571428571428], [3424.0, 206.81818181818184], [3352.0, 493.6666666666667], [3360.0, 621.0], [3368.0, 153.0], [3376.0, 267.5], [3384.0, 197.0], [3440.0, 190.5], [3448.0, 455.7894736842105], [3392.0, 168.33333333333334], [3400.0, 606.3333333333334], [3408.0, 269.6666666666667], [3416.0, 298.0], [3432.0, 153.8666666666667], [3512.0, 284.0], [3568.0, 360.53846153846155], [3480.0, 117.0], [3504.0, 427.1304347826087], [3496.0, 162.0], [3488.0, 324.3], [3472.0, 260.0], [3456.0, 516.2307692307693], [3552.0, 217.03333333333333], [3560.0, 363.83333333333337], [3520.0, 377.0], [3528.0, 209.66666666666666], [3536.0, 421.3333333333333], [3544.0, 289.2857142857143], [3576.0, 352.59999999999997], [3584.0, 481.9166666666667], [3600.0, 458.0], [3608.0, 304.25], [3592.0, 666.0], [2145.0, 240.625], [2073.0, 218.63636363636363], [2169.0, 68.0], [2153.0, 241.71428571428572], [2161.0, 109.7], [2097.0, 147.83333333333334], [2113.0, 160.37499999999997], [2121.0, 38.333333333333336], [2129.0, 132.06666666666666], [2137.0, 109.66666666666667], [2105.0, 245.48000000000005], [2057.0, 138.58333333333334], [2049.0, 279.2], [2065.0, 164.82608695652175], [2081.0, 55.66666666666667], [2089.0, 119.71428571428571], [2193.0, 49.0], [2209.0, 163.33333333333331], [2217.0, 83.8], [2225.0, 237.0], [2257.0, 268.75], [2265.0, 252.0], [2233.0, 163.92307692307693], [2281.0, 238.25], [2273.0, 135.6], [2201.0, 181.66666666666669], [2297.0, 215.2], [2289.0, 3.0], [2249.0, 444.0], [2241.0, 269.5], [2321.0, 254.42857142857142], [2361.0, 152.66666666666666], [2353.0, 186.72727272727272], [2305.0, 322.64705882352945], [2313.0, 159.0], [2337.0, 193.7777777777778], [2345.0, 159.60000000000002], [2329.0, 188.3125], [2401.0, 319.9259259259259], [2417.0, 67.75], [2409.0, 129.66666666666666], [2385.0, 194.88235294117646], [2377.0, 193.46153846153845], [2369.0, 235.20000000000002], [2393.0, 337.4166666666667], [2425.0, 198.41666666666666], [2529.0, 220.0], [2441.0, 157.375], [2553.0, 108.75], [2545.0, 307.75], [2481.0, 44.2], [2473.0, 169.5], [2465.0, 29.0], [2457.0, 129.66666666666666], [2449.0, 191.57142857142858], [2489.0, 258.1666666666667], [2433.0, 106.66666666666667], [2521.0, 180.83333333333331], [2513.0, 147.28571428571428], [2505.0, 63.307692307692314], [2497.0, 138.3913043478261], [2577.0, 384.75], [2569.0, 114.0], [2585.0, 283.5], [2665.0, 504.0], [2657.0, 1.0], [2681.0, 33.75], [2673.0, 75.5], [2625.0, 20.0], [2641.0, 124.0], [2649.0, 145.375], [2593.0, 194.0], [2601.0, 111.45454545454545], [2609.0, 230.0], [2617.0, 160.66666666666669], [2561.0, 143.0], [2697.0, 88.33333333333333], [2737.0, 109.75], [2713.0, 133.14285714285714], [2785.0, 142.33333333333331], [2777.0, 77.0], [2761.0, 122.4], [2753.0, 3.0], [2729.0, 123.0], [2721.0, 316.0], [2689.0, 234.23076923076923], [2745.0, 2.0], [2793.0, 207.0], [2809.0, 1.0], [2801.0, 3.0], [2937.0, 27.0], [2873.0, 254.3636363636364], [2857.0, 62.5], [2849.0, 2.0], [2865.0, 81.5], [2881.0, 101.0], [2889.0, 529.0], [2929.0, 53.0], [2921.0, 34.83333333333333], [2841.0, 104.28571428571428], [2833.0, 184.73333333333335], [2825.0, 70.5], [2817.0, 258.62499999999994], [2897.0, 269.0], [2905.0, 279.625], [2961.0, 268.5], [2945.0, 55.5], [2969.0, 412.7142857142857], [2977.0, 64.66666666666667], [3009.0, 579.0], [3073.0, 436.2142857142858], [3169.0, 368.61904761904765], [3113.0, 188.39999999999998], [3105.0, 391.47368421052624], [3121.0, 321.83333333333337], [3129.0, 330.0], [3145.0, 313.23076923076917], [3137.0, 722.5], [3185.0, 449.2045454545454], [3193.0, 395.95454545454544], [3153.0, 240.13333333333338], [3161.0, 341.5], [3177.0, 333.6111111111111], [3081.0, 295.0], [3089.0, 162.12499999999997], [3097.0, 159.64285714285714], [3265.0, 209.5], [3313.0, 227.57142857142853], [3273.0, 51.25], [3281.0, 116.0], [3289.0, 85.0], [3305.0, 75.5], [3321.0, 399.5833333333333], [3345.0, 223.8888888888889], [3337.0, 173.45454545454544], [3353.0, 294.77777777777794], [3425.0, 204.33333333333334], [3329.0, 134.0], [3361.0, 201.00000000000003], [3377.0, 177.75], [3385.0, 109.0], [3393.0, 148.5], [3401.0, 965.0], [3417.0, 347.5], [3449.0, 218.6], [3441.0, 119.0], [3433.0, 183.28571428571428], [3513.0, 274.14285714285717], [3481.0, 190.75], [3497.0, 279.0], [3489.0, 281.0], [3505.0, 336.8], [3457.0, 404.3333333333333], [3553.0, 252.5], [3561.0, 217.0], [3569.0, 423.86956521739137], [3545.0, 271.6666666666667], [3537.0, 373.0], [3529.0, 339.45454545454544], [3521.0, 379.0], [3577.0, 290.5], [3585.0, 559.6111111111111], [3593.0, 520.1428571428571], [3601.0, 439.5], [3609.0, 216.0], [1037.0, 130.0], [1025.0, 161.85714285714286], [1045.0, 130.5], [1049.0, 50.0], [1029.0, 83.0], [1033.0, 349.0], [1077.0, 75.875], [1073.0, 306.0], [1081.0, 148.77272727272728], [1057.0, 239.33333333333331], [1065.0, 74.57142857142857], [1069.0, 83.88888888888889], [1041.0, 93.5], [1145.0, 248.8], [1089.0, 198.0], [1117.0, 0.0], [1149.0, 103.53846153846153], [1125.0, 448.0], [1121.0, 447.0], [1137.0, 192.57142857142858], [1101.0, 272.75], [1093.0, 48.0], [1141.0, 346.0], [1133.0, 91.55555555555556], [1129.0, 548.0], [1105.0, 64.0], [1109.0, 192.25], [1161.0, 259.0], [1157.0, 95.0], [1153.0, 197.66666666666666], [1181.0, 132.66666666666666], [1177.0, 46.0], [1169.0, 233.35999999999999], [1173.0, 301.0], [1189.0, 90.90909090909092], [1185.0, 97.0], [1201.0, 137.00000000000003], [1193.0, 83.14285714285714], [1197.0, 151.0], [1265.0, 4.333333333333333], [1233.0, 83.33333333333333], [1237.0, 20.166666666666668], [1273.0, 36.0], [1261.0, 73.0], [1257.0, 5.0], [1253.0, 6.0], [1249.0, 6.0], [1245.0, 4.0], [1229.0, 49.0], [1225.0, 5.0], [1241.0, 4.0], [1329.0, 39.0], [1325.0, 125.6], [1341.0, 9.0], [1337.0, 9.0], [1309.0, 57.75000000000001], [1285.0, 46.2], [1281.0, 5.5], [1305.0, 7.0], [1301.0, 507.0], [1297.0, 508.8], [1293.0, 8.0], [1289.0, 7.0], [1357.0, 142.0], [1397.0, 10.5], [1393.0, 156.5], [1353.0, 210.5], [1349.0, 412.0], [1345.0, 9.333333333333334], [1405.0, 43.666666666666664], [1389.0, 168.5], [1377.0, 330.0], [1373.0, 544.0], [1369.0, 29.8], [1365.0, 59.5], [1361.0, 42.33333333333333], [1465.0, 58.75], [1449.0, 112.0], [1461.0, 70.5], [1469.0, 23.0], [1445.0, 93.4], [1457.0, 10.0], [1453.0, 74.2], [1441.0, 10.0], [1417.0, 11.0], [1409.0, 311.0], [1505.0, 94.4], [1517.0, 62.133333333333326], [1513.0, 151.5], [1509.0, 52.77777777777777], [1489.0, 14.5], [1493.0, 111.2], [1497.0, 131.53846153846155], [1485.0, 27.0], [1525.0, 63.25], [1533.0, 11.0], [1521.0, 116.6], [1481.0, 85.0], [1477.0, 39.166666666666664], [1473.0, 123.33333333333333], [1501.0, 35.785714285714285], [1593.0, 67.22222222222223], [1549.0, 96.375], [1545.0, 368.2], [1541.0, 272.1818181818182], [1561.0, 24.8], [1557.0, 10.0], [1553.0, 108.5], [1565.0, 90.8], [1537.0, 310.2222222222223], [1569.0, 202.33333333333331], [1597.0, 160.0], [1585.0, 58.37499999999999], [1589.0, 70.50000000000001], [1577.0, 117.2], [1581.0, 208.8], [1573.0, 217.4761904761905], [1657.0, 233.0], [1613.0, 429.0], [1609.0, 309.6666666666667], [1605.0, 409.0], [1601.0, 10.0], [1649.0, 154.2], [1653.0, 452.25], [1661.0, 285.7196261682244], [1621.0, 98.33333333333333], [1617.0, 210.66666666666666], [1625.0, 269.5], [1629.0, 127.0], [1633.0, 225.625], [1637.0, 181.55555555555557], [1641.0, 59.50000000000001], [1645.0, 80.0], [1717.0, 121.0], [1721.0, 127.33333333333333], [1673.0, 429.0], [1713.0, 173.0], [1725.0, 40.0], [1689.0, 274.3333333333333], [1665.0, 145.66666666666666], [1669.0, 32.0], [1693.0, 304.8333333333333], [1697.0, 163.33333333333331], [1705.0, 64.0], [1709.0, 150.0], [1701.0, 153.0], [1741.0, 138.3], [1729.0, 122.0], [1757.0, 201.5], [1753.0, 160.33333333333334], [1733.0, 77.0], [1737.0, 48.5], [1745.0, 115.2], [1749.0, 135.0], [1761.0, 87.25], [1789.0, 41.125], [1781.0, 247.0], [1777.0, 322.125], [1785.0, 318.0], [1773.0, 136.0], [1769.0, 424.0], [1765.0, 208.0], [1841.0, 100.81818181818183], [1797.0, 147.25], [1793.0, 56.25], [1801.0, 202.33333333333331], [1805.0, 236.57142857142856], [1845.0, 178.57142857142858], [1825.0, 90.0], [1833.0, 105.5], [1829.0, 255.5714285714286], [1837.0, 165.2], [1809.0, 76.0], [1813.0, 180.6], [1817.0, 333.2857142857143], [1821.0, 190.64285714285714], [1869.0, 218.42857142857142], [1861.0, 95.6], [1857.0, 220.0], [1917.0, 101.5], [1913.0, 140.0], [1897.0, 113.0], [1881.0, 3.0], [1877.0, 220.5], [1873.0, 322.0], [1865.0, 120.0], [1969.0, 325.14285714285717], [1933.0, 146.0], [1973.0, 57.5], [1977.0, 487.5], [1961.0, 162.7], [1965.0, 207.0], [1929.0, 74.66666666666667], [1949.0, 122.14285714285714], [1925.0, 219.0], [1921.0, 387.8888888888889], [1945.0, 265.45454545454544], [1937.0, 263.6666666666667], [1941.0, 133.5], [1981.0, 176.75], [1957.0, 351.5], [2033.0, 226.21739130434784], [2013.0, 94.76923076923077], [1985.0, 151.44444444444446], [2017.0, 74.57142857142857], [2041.0, 54.714285714285715], [2037.0, 194.75], [2045.0, 205.66666666666666], [2021.0, 142.69230769230768], [2005.0, 58.0], [2001.0, 213.8], [2009.0, 120.66666666666667], [1989.0, 202.2857142857143], [1993.0, 108.0], [2029.0, 143.125], [2025.0, 157.22222222222223], [2066.0, 161.9375], [2074.0, 169.3658536585366], [2146.0, 101.2], [2154.0, 124.45454545454547], [2162.0, 109.57142857142857], [2170.0, 72.5], [2050.0, 128.6], [2106.0, 217.66666666666666], [2098.0, 165.5555555555556], [2114.0, 86.58333333333333], [2058.0, 182.375], [2090.0, 291.0625], [2082.0, 148.24999999999997], [2122.0, 164.83870967741936], [2130.0, 192.0], [2138.0, 62.5], [2274.0, 101.75], [2202.0, 123.39999999999999], [2186.0, 204.0], [2178.0, 156.20000000000002], [2234.0, 223.0], [2298.0, 118.0], [2250.0, 353.0], [2242.0, 203.5], [2282.0, 118.89999999999998], [2258.0, 119.88235294117646], [2266.0, 373.0], [2218.0, 224.0], [2210.0, 64.0], [2226.0, 211.14285714285714], [2330.0, 161.33333333333334], [2306.0, 187.09523809523813], [2338.0, 247.67741935483872], [2346.0, 184.9], [2362.0, 250.6], [2354.0, 71.33333333333334], [2322.0, 276.5], [2314.0, 118.0], [2386.0, 121.25925925925924], [2378.0, 201.78571428571425], [2370.0, 135.2], [2426.0, 169.44444444444446], [2394.0, 251.7586206896552], [2402.0, 255.28571428571428], [2410.0, 133.35000000000002], [2418.0, 162.625], [2546.0, 8.5], [2450.0, 109.0], [2442.0, 164.0], [2434.0, 225.0], [2530.0, 151.0], [2538.0, 114.0], [2458.0, 184.99999999999997], [2482.0, 43.85714285714286], [2474.0, 133.8], [2466.0, 301.0], [2490.0, 137.35294117647058], [2522.0, 176.66666666666666], [2514.0, 118.2], [2506.0, 200.0], [2498.0, 193.25], [2554.0, 246.2], [2586.0, 194.66666666666666], [2618.0, 71.5], [2570.0, 411.5], [2578.0, 311.5], [2610.0, 104.99999999999999], [2602.0, 66.2], [2594.0, 170.33333333333334], [2666.0, 3.0], [2658.0, 125.0], [2634.0, 60.0], [2682.0, 162.5], [2642.0, 3.5], [2650.0, 127.15384615384616], [2794.0, 336.3333333333333], [2746.0, 64.28571428571429], [2738.0, 7.0], [2810.0, 4.0], [2762.0, 110.875], [2754.0, 3.0], [2778.0, 127.0], [2714.0, 292.53846153846155], [2698.0, 112.0], [2690.0, 301.0], [2730.0, 503.0], [2802.0, 132.0], [2786.0, 1.0], [2922.0, 27.0], [2882.0, 122.85714285714285], [2858.0, 68.0], [2850.0, 2.0], [2898.0, 163.6], [2906.0, 306.0], [2930.0, 2.0], [2842.0, 60.5], [2834.0, 11.0], [2826.0, 122.875], [2818.0, 142.2777777777778], [2890.0, 704.0], [2874.0, 442.625], [2962.0, 2.0], [2970.0, 164.7], [2978.0, 578.5], [2954.0, 1.0], [3010.0, 121.5], [3058.0, 425.0], [3066.0, 191.0], [3074.0, 83.0], [3170.0, 370.4666666666666], [3130.0, 215.3], [3122.0, 182.98214285714283], [3114.0, 350.1111111111111], [3106.0, 259.28571428571433], [3186.0, 437.2857142857143], [3146.0, 268.66666666666663], [3138.0, 362.2857142857143], [3154.0, 269.7500000000001], [3178.0, 496.1333333333333], [3082.0, 757.6666666666666], [3162.0, 412.0], [3090.0, 240.4], [3098.0, 178.76923076923075], [3298.0, 293.83333333333337], [3306.0, 80.5], [3226.0, 47.0], [3234.0, 51.0], [3274.0, 70.14285714285714], [3266.0, 216.75], [3290.0, 320.7142857142857], [3314.0, 155.42857142857144], [3322.0, 260.55555555555554], [3330.0, 165.44444444444446], [3338.0, 66.83333333333333], [3354.0, 331.6335877862595], [3346.0, 106.0], [3426.0, 112.4], [3370.0, 259.6], [3362.0, 169.875], [3386.0, 168.66666666666666], [3378.0, 281.83333333333337], [3394.0, 225.0], [3418.0, 114.0], [3410.0, 189.5], [3402.0, 584.0], [3434.0, 261.1875], [3442.0, 119.66666666666667], [3450.0, 319.53846153846155], [3482.0, 215.0], [3506.0, 369.1666666666667], [3514.0, 420.0], [3458.0, 194.5], [3554.0, 314.1], [3562.0, 230.53846153846155], [3546.0, 343.75], [3578.0, 490.2903225806451], [3530.0, 411.66666666666663], [3522.0, 377.0], [3570.0, 428.17241379310343], [3586.0, 342.5675675675676], [3594.0, 588.9166666666667], [3602.0, 666.5], [3610.0, 273.9375], [2075.0, 243.2857142857143], [2163.0, 233.8], [2155.0, 222.8571428571429], [2147.0, 377.1666666666667], [2171.0, 138.5], [2067.0, 203.9333333333333], [2059.0, 206.57142857142856], [2051.0, 252.2222222222222], [2099.0, 202.11111111111114], [2091.0, 178.83333333333337], [2083.0, 100.06896551724137], [2115.0, 69.375], [2139.0, 89.75], [2123.0, 124.65853658536587], [2131.0, 151.8], [2107.0, 215.41666666666666], [2203.0, 122.81818181818181], [2187.0, 15.333333333333332], [2227.0, 111.6], [2195.0, 58.666666666666664], [2179.0, 499.66666666666663], [2235.0, 159.83333333333331], [2219.0, 194.25], [2211.0, 146.33333333333334], [2259.0, 55.25], [2267.0, 114.66666666666667], [2299.0, 221.81481481481484], [2251.0, 516.0], [2243.0, 518.0], [2291.0, 164.0], [2283.0, 211.33333333333331], [2275.0, 253.0], [2403.0, 209.34], [2307.0, 254.63636363636363], [2419.0, 205.86666666666667], [2339.0, 154.84615384615387], [2347.0, 148.85714285714286], [2379.0, 278.04], [2355.0, 160.16666666666663], [2363.0, 235.6], [2331.0, 185.94117647058826], [2315.0, 117.2], [2323.0, 228.8], [2387.0, 234.36363636363637], [2395.0, 173.31818181818178], [2411.0, 113.2], [2427.0, 103.81250000000003], [2371.0, 157.25], [2531.0, 172.2857142857143], [2451.0, 28.166666666666664], [2443.0, 125.37500000000003], [2435.0, 276.0], [2459.0, 141.57142857142856], [2483.0, 118.50000000000001], [2475.0, 226.66666666666666], [2467.0, 81.25], [2491.0, 46.66666666666667], [2555.0, 107.58823529411768], [2523.0, 212.66666666666669], [2515.0, 111.99999999999999], [2507.0, 153.66666666666666], [2499.0, 206.63636363636363], [2539.0, 117.0], [2547.0, 242.66666666666666], [2659.0, 65.0], [2627.0, 67.0], [2587.0, 327.0], [2579.0, 508.0], [2571.0, 508.5], [2651.0, 220.3181818181818], [2643.0, 126.0], [2611.0, 199.28571428571428], [2619.0, 130.125], [2595.0, 166.04], [2603.0, 64.24999999999999], [2683.0, 159.25], [2675.0, 1.0], [2667.0, 503.0], [2707.0, 87.8], [2731.0, 235.85714285714286], [2691.0, 2.5], [2747.0, 202.0], [2739.0, 126.6], [2699.0, 62.5], [2715.0, 398.62500000000006], [2795.0, 235.33333333333334], [2787.0, 64.5], [2811.0, 185.0], [2763.0, 190.0], [2779.0, 345.6], [2771.0, 403.0], [2755.0, 2.75], [2723.0, 203.00000000000003], [2883.0, 241.8], [2875.0, 264.875], [2899.0, 350.0], [2907.0, 251.87499999999997], [2923.0, 234.6818181818182], [2843.0, 3.0], [2835.0, 109.0], [2819.0, 529.3333333333334], [2851.0, 177.43749999999997], [2867.0, 120.0], [2891.0, 703.1818181818182], [2971.0, 204.21212121212122], [2979.0, 82.0], [3067.0, 309.0], [3035.0, 28.0], [2955.0, 1155.0], [2947.0, 2.0], [3171.0, 321.4347826086956], [3147.0, 405.19999999999993], [3139.0, 201.4], [3155.0, 278.1875], [3099.0, 248.84615384615387], [3091.0, 144.02857142857144], [3195.0, 745.0], [3083.0, 248.4], [3131.0, 272.00000000000006], [3107.0, 125.75], [3115.0, 150.41176470588235], [3123.0, 240.37179487179498], [3179.0, 373.09523809523813], [3187.0, 421.8], [3163.0, 551.6666666666666], [3323.0, 389.0], [3211.0, 46.0], [3227.0, 47.0], [3267.0, 201.5], [3275.0, 54.5], [3283.0, 84.66666666666667], [3291.0, 460.0], [3307.0, 126.85714285714288], [3315.0, 222.0], [3331.0, 148.88888888888889], [3339.0, 275.54545454545456], [3355.0, 234.68421052631567], [3347.0, 107.0], [3379.0, 159.33333333333331], [3371.0, 250.5], [3363.0, 397.25], [3387.0, 164.0], [3435.0, 251.42857142857144], [3443.0, 120.0], [3395.0, 162.4], [3403.0, 479.0], [3411.0, 114.0], [3419.0, 269.85714285714283], [3451.0, 213.66666666666669], [3555.0, 425.0], [3571.0, 502.23076923076917], [3507.0, 352.8666666666666], [3499.0, 334.42857142857144], [3491.0, 282.6666666666667], [3459.0, 209.0], [3515.0, 302.0], [3547.0, 270.5], [3563.0, 140.0], [3579.0, 503.8709677419355], [3523.0, 180.0], [3531.0, 381.0], [3539.0, 370.75], [3587.0, 379.45161290322574], [3595.0, 366.2978723404255], [3603.0, 269.1666666666667], [519.0, 34.0], [525.0, 161.5], [531.0, 38.666666666666664], [535.0, 40.25], [537.0, 42.0], [541.0, 47.0], [543.0, 276.0], [545.0, 160.5], [551.0, 1.0], [555.0, 0.0], [579.0, 50.125], [581.0, 47.5], [583.0, 33.0], [587.0, 48.0], [603.0, 1.0], [601.0, 377.0], [639.0, 31.5], [635.0, 210.0], [627.0, 46.0], [625.0, 75.0], [637.0, 60.333333333333336], [629.0, 57.0], [631.0, 59.375], [633.0, 53.666666666666664], [619.0, 1.0], [611.0, 75.0], [641.0, 34.0], [643.0, 29.0], [645.0, 34.0], [647.0, 31.5], [693.0, 74.0], [695.0, 71.5], [681.0, 377.0], [679.0, 3.0], [723.0, 56.5], [735.0, 27.0], [733.0, 27.0], [719.0, 71.0], [725.0, 29.0], [721.0, 33.0], [767.0, 115.0], [739.0, 35.75], [741.0, 94.0], [743.0, 52.0], [761.0, 113.0], [747.0, 35.5], [751.0, 70.5], [753.0, 25.5], [755.0, 70.5], [757.0, 29.0], [759.0, 38.0], [793.0, 57.27272727272727], [777.0, 152.0], [785.0, 115.0], [797.0, 53.5], [775.0, 294.0], [807.0, 126.0], [803.0, 129.0], [813.0, 134.0], [801.0, 1.0], [805.0, 106.4], [823.0, 90.66666666666667], [829.0, 484.5], [827.0, 270.0], [825.0, 169.0], [821.0, 420.0], [819.0, 45.0], [817.0, 798.0], [859.0, 127.0], [861.0, 156.66666666666669], [857.0, 195.5], [837.0, 268.0], [863.0, 169.2], [853.0, 65.0], [851.0, 367.0], [849.0, 366.0], [847.0, 269.0], [845.0, 268.0], [871.0, 89.0], [867.0, 107.3], [865.0, 116.41666666666667], [869.0, 38.42857142857142], [893.0, 135.5], [891.0, 359.0], [887.0, 112.6], [885.0, 361.0], [881.0, 338.0], [895.0, 63.0], [873.0, 73.25], [875.0, 215.0], [877.0, 414.5], [921.0, 150.2], [909.0, 290.8333333333333], [907.0, 167.83333333333334], [911.0, 105.0], [903.0, 128.33333333333334], [897.0, 63.0], [915.0, 101.5], [917.0, 181.0], [919.0, 172.6], [927.0, 261.0], [925.0, 463.0], [923.0, 463.0], [953.0, 130.13333333333333], [941.0, 93.75], [939.0, 210.0], [937.0, 100.53846153846153], [959.0, 208.0], [955.0, 261.0], [947.0, 161.0], [945.0, 360.0], [933.0, 161.0], [987.0, 188.16666666666669], [975.0, 244.42857142857144], [985.0, 593.5], [967.0, 65.0], [971.0, 128.0], [973.0, 5.0], [989.0, 132.0], [977.0, 236.0], [979.0, 331.0], [981.0, 101.0], [983.0, 42.75], [997.0, 89.0], [995.0, 133.0], [993.0, 156.5], [999.0, 131.0], [1021.0, 184.33333333333334], [1011.0, 1100.0], [1013.0, 215.08333333333331], [1015.0, 104.71428571428572], [1001.0, 2.0], [1003.0, 200.0], [1005.0, 87.33333333333333], [1007.0, 53.0], [1078.0, 154.0], [1046.0, 141.1111111111111], [1026.0, 246.33333333333334], [1034.0, 89.75], [1038.0, 431.0], [1082.0, 122.94444444444441], [1066.0, 102.33333333333334], [1070.0, 151.33333333333331], [1062.0, 106.0], [1086.0, 158.0], [1042.0, 127.8], [1146.0, 100.5], [1090.0, 2.0], [1118.0, 300.0], [1114.0, 356.0], [1110.0, 7.0], [1150.0, 52.333333333333336], [1142.0, 183.75], [1138.0, 256.0], [1094.0, 49.0], [1122.0, 104.0], [1126.0, 126.0], [1134.0, 347.0], [1158.0, 129.33333333333334], [1154.0, 132.8], [1182.0, 134.0], [1174.0, 111.8], [1178.0, 49.0], [1170.0, 120.0], [1162.0, 210.0], [1190.0, 168.25], [1186.0, 134.625], [1202.0, 157.83333333333334], [1194.0, 47.0], [1198.0, 300.0], [1166.0, 94.0], [1266.0, 3.0], [1234.0, 10.0], [1238.0, 57.0], [1246.0, 6.6], [1222.0, 134.0], [1218.0, 331.0], [1278.0, 103.0], [1274.0, 6.0], [1270.0, 55.25], [1250.0, 4.5], [1230.0, 78.66666666666667], [1226.0, 336.0], [1338.0, 9.0], [1330.0, 141.5], [1310.0, 38.0], [1282.0, 5.5], [1294.0, 7.333333333333333], [1286.0, 107.00000000000001], [1306.0, 274.0], [1302.0, 383.25], [1298.0, 257.0], [1342.0, 9.0], [1334.0, 108.5], [1326.0, 8.0], [1322.0, 8.333333333333334], [1318.0, 108.0], [1314.0, 108.0], [1350.0, 187.6], [1366.0, 39.166666666666664], [1362.0, 9.0], [1406.0, 371.4], [1402.0, 10.0], [1398.0, 9.0], [1394.0, 10.0], [1354.0, 159.0], [1386.0, 109.5], [1378.0, 76.66666666666667], [1370.0, 35.0], [1346.0, 250.8], [1458.0, 10.0], [1446.0, 60.0], [1470.0, 58.0625], [1466.0, 12.0], [1442.0, 10.0], [1422.0, 10.0], [1418.0, 10.666666666666666], [1414.0, 109.83333333333333], [1410.0, 310.0], [1522.0, 104.25], [1494.0, 73.66666666666666], [1490.0, 114.6], [1506.0, 169.0], [1510.0, 132.0], [1486.0, 68.42857142857142], [1526.0, 115.87500000000003], [1534.0, 11.0], [1530.0, 11.0], [1518.0, 77.0], [1514.0, 134.16666666666666], [1478.0, 173.0], [1474.0, 110.28571428571429], [1502.0, 77.08333333333333], [1498.0, 69.7], [1542.0, 184.0], [1546.0, 241.375], [1538.0, 276.0769230769231], [1566.0, 139.11111111111111], [1562.0, 82.0], [1558.0, 91.5], [1554.0, 9.0], [1550.0, 141.6], [1570.0, 105.05882352941177], [1598.0, 293.0], [1594.0, 113.5], [1590.0, 110.77777777777777], [1586.0, 207.50000000000003], [1574.0, 130.8], [1582.0, 184.0], [1578.0, 103.66666666666666], [1654.0, 271.6666666666667], [1610.0, 145.0], [1650.0, 122.0], [1614.0, 164.5], [1606.0, 283.42857142857144], [1630.0, 308.5], [1626.0, 91.66666666666666], [1618.0, 183.14285714285714], [1634.0, 137.0], [1662.0, 255.57104557640753], [1658.0, 270.5], [1638.0, 179.36363636363635], [1642.0, 410.75], [1646.0, 436.0], [1670.0, 68.0], [1678.0, 101.5], [1674.0, 221.33333333333334], [1666.0, 17.0], [1714.0, 90.99999999999999], [1682.0, 74.33333333333333], [1686.0, 141.4], [1694.0, 194.0], [1690.0, 437.42857142857144], [1698.0, 149.0], [1702.0, 222.0], [1710.0, 220.0], [1706.0, 222.0], [1722.0, 80.0], [1726.0, 121.5], [1762.0, 144.66666666666666], [1770.0, 261.75], [1774.0, 239.29411764705878], [1766.0, 275.2], [1742.0, 89.85000000000001], [1782.0, 319.0], [1778.0, 322.0], [1790.0, 49.0], [1786.0, 220.0], [1738.0, 80.0], [1750.0, 201.0], [1746.0, 10.0], [1734.0, 186.66666666666666], [1730.0, 221.0], [1758.0, 201.0], [1754.0, 100.0], [1842.0, 262.5], [1818.0, 204.35714285714283], [1826.0, 327.5], [1838.0, 74.0], [1834.0, 99.0], [1830.0, 268.84615384615387], [1850.0, 93.5], [1846.0, 320.0], [1854.0, 53.0], [1810.0, 144.63636363636363], [1814.0, 97.08333333333334], [1822.0, 333.63636363636357], [1806.0, 306.75], [1802.0, 402.3333333333333], [1794.0, 350.57142857142856], [1798.0, 402.0], [1870.0, 431.375], [1866.0, 31.6], [1858.0, 189.0], [1882.0, 112.0], [1886.0, 42.5], [1878.0, 215.42857142857144], [1874.0, 454.3333333333333], [1914.0, 99.72727272727273], [1918.0, 102.0], [1910.0, 40.333333333333336], [1890.0, 98.0], [1970.0, 239.71428571428572], [1926.0, 167.5], [1922.0, 320.0], [1934.0, 161.25], [1930.0, 279.0], [1974.0, 273.99999999999994], [1982.0, 162.90909090909093], [1978.0, 128.5], [1946.0, 194.42857142857142], [1950.0, 62.333333333333336], [1954.0, 150.8], [1966.0, 314.6666666666667], [1962.0, 163.27272727272728], [1958.0, 105.5], [1942.0, 108.66666666666667], [1938.0, 286.0909090909091], [2034.0, 285.2142857142857], [2038.0, 286.8], [2042.0, 111.75], [1998.0, 118.64285714285714], [1994.0, 171.33333333333334], [1990.0, 294.0], [1986.0, 127.77777777777777], [2026.0, 184.33333333333334], [2014.0, 130.99999999999997], [2022.0, 327.59999999999997], [2018.0, 106.92857142857143], [2046.0, 88.05882352941175], [2010.0, 289.5], [2006.0, 181.66666666666666], [2002.0, 263.5714285714286], [2030.0, 432.6], [2068.0, 186.1176470588235], [2076.0, 200.89189189189185], [2148.0, 253.83333333333334], [2156.0, 261.66666666666663], [2060.0, 279.0], [2052.0, 251.25], [2108.0, 151.8148148148148], [2100.0, 90.07692307692308], [2092.0, 133.2], [2084.0, 107.2], [2116.0, 271.0], [2124.0, 113.97368421052633], [2132.0, 189.83333333333331], [2140.0, 88.25], [2164.0, 197.5], [2172.0, 77.66666666666667], [2196.0, 311.4375], [2300.0, 118.0], [2188.0, 22.0], [2180.0, 139.2], [2236.0, 170.875], [2204.0, 213.85714285714286], [2276.0, 233.49999999999997], [2284.0, 283.6666666666667], [2292.0, 310.0], [2252.0, 120.0], [2244.0, 220.5], [2260.0, 92.0], [2268.0, 298.9], [2212.0, 98.5], [2220.0, 169.83333333333331], [2228.0, 168.0], [2404.0, 226.94736842105263], [2340.0, 192.42857142857142], [2356.0, 147.83333333333337], [2364.0, 333.25], [2348.0, 88.875], [2388.0, 157.71428571428567], [2380.0, 179.76923076923077], [2372.0, 109.78571428571429], [2428.0, 146.66666666666669], [2412.0, 125.14285714285712], [2420.0, 302.0], [2396.0, 259.2142857142857], [2308.0, 115.60000000000001], [2316.0, 220.33333333333334], [2332.0, 134.1818181818182], [2324.0, 232.125], [2548.0, 66.8], [2444.0, 204.62500000000003], [2492.0, 193.36111111111111], [2436.0, 187.5], [2460.0, 96.4], [2452.0, 133.0], [2556.0, 118.6153846153846], [2508.0, 168.46666666666667], [2500.0, 134.0], [2524.0, 168.15384615384616], [2516.0, 183.5], [2540.0, 51.5], [2532.0, 321.0], [2484.0, 182.66666666666669], [2476.0, 193.9090909090909], [2468.0, 133.63636363636363], [2580.0, 59.5], [2564.0, 194.46153846153845], [2572.0, 316.61538461538464], [2612.0, 203.875], [2620.0, 215.0], [2604.0, 207.0], [2668.0, 254.0], [2684.0, 238.0], [2676.0, 1.0], [2660.0, 3.0], [2588.0, 505.0], [2644.0, 44.33333333333333], [2652.0, 330.1111111111111], [2708.0, 129.5], [2796.0, 293.14285714285717], [2732.0, 180.81818181818184], [2804.0, 110.4], [2756.0, 162.63157894736838], [2780.0, 126.0], [2772.0, 336.0], [2716.0, 225.33333333333331], [2788.0, 3.0], [2724.0, 216.33333333333334], [2700.0, 3.5], [2692.0, 262.75], [2748.0, 102.0], [2740.0, 1.3333333333333333], [2812.0, 144.0], [2916.0, 3.0], [2828.0, 57.5], [2820.0, 419.5], [2844.0, 88.125], [2836.0, 122.5], [2924.0, 111.4], [2932.0, 1.0], [2868.0, 75.5], [2852.0, 1.0], [2884.0, 196.8], [2892.0, 702.2], [2876.0, 118.0], [2900.0, 239.75], [2908.0, 75.33333333333333], [3060.0, 432.25], [2972.0, 459.3333333333333], [2948.0, 404.33333333333337], [3012.0, 17.0], [3020.0, 51.0], [3036.0, 29.0], [3052.0, 121.0], [3068.0, 213.0], [3180.0, 321.3529411764706], [3172.0, 476.15384615384613], [3084.0, 274.4285714285714], [3076.0, 184.0], [3108.0, 234.9545454545454], [3148.0, 356.40000000000003], [3140.0, 390.3846153846154], [3156.0, 267.7222222222223], [3164.0, 290.75], [3188.0, 402.94594594594594], [3100.0, 136.14285714285714], [3092.0, 190.1219512195122], [3196.0, 395.5], [3124.0, 277.3584905660377], [3132.0, 326.22222222222223], [3116.0, 300.4545454545455], [3324.0, 212.72222222222223], [3228.0, 188.0], [3244.0, 152.0], [3252.0, 153.0], [3268.0, 209.7142857142857], [3316.0, 190.27272727272728], [3276.0, 251.3846153846154], [3292.0, 297.0], [3284.0, 225.0], [3308.0, 261.8181818181818], [3300.0, 49.0], [3348.0, 48.0], [3340.0, 267.42307692307696], [3356.0, 388.4], [3332.0, 149.0], [3372.0, 316.53846153846155], [3380.0, 199.0], [3388.0, 293.55], [3452.0, 215.87499999999997], [3396.0, 113.0], [3404.0, 348.5], [3412.0, 114.0], [3516.0, 407.0], [3508.0, 283.0], [3500.0, 325.5], [3492.0, 274.0], [3476.0, 261.0], [3460.0, 472.0], [3556.0, 527.0], [3484.0, 654.25], [3564.0, 331.50000000000006], [3572.0, 277.75], [3580.0, 420.5714285714286], [3524.0, 279.0], [3532.0, 372.3333333333333], [3540.0, 279.0], [3548.0, 321.5], [3588.0, 440.00000000000006], [3596.0, 465.4666666666667], [3604.0, 425.0], [2069.0, 214.0], [2165.0, 128.5], [2053.0, 188.5], [2061.0, 144.04545454545453], [2077.0, 287.7800000000001], [2157.0, 234.66666666666666], [2149.0, 207.33333333333334], [2117.0, 150.3], [2173.0, 68.0], [2125.0, 80.95454545454545], [2133.0, 156.31250000000003], [2141.0, 298.625], [2109.0, 391.55555555555554], [2101.0, 81.1111111111111], [2093.0, 155.7], [2085.0, 202.0], [2285.0, 213.0], [2301.0, 86.375], [2189.0, 2.0], [2277.0, 264.0], [2205.0, 221.0], [2261.0, 232.6], [2253.0, 446.8333333333333], [2245.0, 521.5], [2269.0, 138.0], [2181.0, 130.2], [2213.0, 85.5], [2221.0, 241.25], [2237.0, 237.0], [2229.0, 369.0], [2293.0, 176.33333333333334], [2333.0, 115.36363636363637], [2317.0, 249.25675675675686], [2349.0, 54.5], [2373.0, 163.6], [2341.0, 136.36363636363635], [2309.0, 248.39285714285714], [2365.0, 192.0666666666667], [2357.0, 157.92857142857142], [2325.0, 311.20000000000005], [2381.0, 149.66666666666666], [2389.0, 227.61538461538464], [2397.0, 212.11764705882354], [2429.0, 269.0], [2421.0, 180.98620689655172], [2413.0, 90.0], [2405.0, 285.3684210526316], [2541.0, 1.5], [2437.0, 369.6666666666667], [2445.0, 156.4], [2453.0, 128.5], [2469.0, 41.33333333333333], [2493.0, 116.0], [2477.0, 146.9], [2557.0, 12.0], [2549.0, 306.0], [2533.0, 320.0], [2461.0, 217.0], [2525.0, 134.0], [2517.0, 124.0], [2509.0, 99.8], [2501.0, 141.77777777777777], [2565.0, 141.0], [2629.0, 17.0], [2685.0, 152.0], [2677.0, 63.0], [2669.0, 503.0], [2661.0, 504.0], [2589.0, 414.2799999999999], [2581.0, 508.0], [2573.0, 318.0], [2645.0, 243.44444444444437], [2653.0, 261.4], [2605.0, 221.0], [2597.0, 27.5], [2613.0, 179.75], [2621.0, 11.5], [2717.0, 185.6], [2693.0, 163.33333333333331], [2805.0, 224.8421052631579], [2813.0, 74.4], [2797.0, 243.29999999999998], [2789.0, 126.0], [2757.0, 80.6], [2765.0, 53.0], [2725.0, 312.0], [2709.0, 146.44444444444446], [2701.0, 5.0], [2749.0, 190.0], [2741.0, 42.66666666666667], [2773.0, 245.125], [2781.0, 1.0], [2925.0, 101.5], [2845.0, 108.30000000000001], [2941.0, 28.0], [2877.0, 88.33333333333333], [2821.0, 3.0], [2837.0, 65.5], [2885.0, 269.3333333333333], [2893.0, 101.0], [2901.0, 262.5], [2909.0, 577.5], [3053.0, 281.925925925926], [2957.0, 577.5], [2989.0, 53.0], [2965.0, 26.0], [2981.0, 14.0], [3013.0, 177.8], [3037.0, 17.25], [3061.0, 330.1428571428571], [3069.0, 282.0], [3133.0, 192.625], [3109.0, 269.75], [3117.0, 349.25000000000006], [3125.0, 280.82278481012645], [3149.0, 333.3809523809524], [3189.0, 495.7857142857142], [3141.0, 289.7], [3157.0, 323.2727272727273], [3165.0, 479.3333333333333], [3173.0, 572.4705882352941], [3181.0, 415.6], [3085.0, 253.0], [3093.0, 256.0], [3101.0, 200.76190476190473], [3077.0, 268.5], [3309.0, 306.8333333333333], [3229.0, 47.0], [3245.0, 153.0], [3269.0, 195.0], [3277.0, 435.8571428571428], [3285.0, 238.4], [3293.0, 49.0], [3301.0, 228.0], [3325.0, 188.0], [3317.0, 221.2608695652174], [3333.0, 234.77777777777777], [3437.0, 335.83333333333337], [3341.0, 169.75], [3349.0, 225.59999999999997], [3357.0, 94.5], [3373.0, 186.2], [3365.0, 492.2222222222222], [3381.0, 181.25], [3389.0, 109.0], [3397.0, 179.27272727272728], [3413.0, 114.0], [3405.0, 189.0], [3421.0, 212.84615384615387], [3445.0, 119.0], [3453.0, 165.4], [3429.0, 211.5], [3461.0, 564.9333333333333], [3573.0, 423.4285714285714], [3509.0, 324.7142857142857], [3501.0, 192.33333333333334], [3493.0, 358.2], [3517.0, 279.0], [3485.0, 387.5357142857143], [3557.0, 334.0], [3565.0, 251.63636363636363], [3581.0, 271.7272727272727], [3549.0, 405.3], [3541.0, 336.0], [3533.0, 430.28571428571433], [3525.0, 349.5], [3589.0, 314.75], [3605.0, 165.0], [3597.0, 164.0], [1031.0, 253.66666666666669], [1035.0, 122.20000000000003], [1043.0, 145.42857142857142], [1047.0, 132.85000000000002], [1027.0, 177.45833333333331], [1055.0, 177.0], [1039.0, 79.75], [1059.0, 4.0], [1087.0, 451.5], [1083.0, 121.66666666666667], [1079.0, 51.0], [1075.0, 494.5], [1063.0, 73.33333333333333], [1071.0, 130.5], [1067.0, 133.0], [1147.0, 135.8], [1095.0, 190.0], [1091.0, 147.0], [1151.0, 236.25], [1143.0, 190.64285714285717], [1103.0, 181.0], [1099.0, 199.75], [1123.0, 297.0], [1127.0, 171.4], [1131.0, 2.0], [1135.0, 66.0], [1115.0, 200.0], [1111.0, 355.0], [1107.0, 355.0], [1159.0, 163.16666666666666], [1155.0, 214.33333333333331], [1183.0, 162.14285714285714], [1175.0, 105.72727272727272], [1171.0, 169.8125], [1163.0, 116.83333333333333], [1167.0, 72.0], [1187.0, 363.6666666666667], [1203.0, 201.5], [1191.0, 97.55555555555554], [1199.0, 111.5], [1195.0, 63.666666666666664], [1279.0, 206.0], [1255.0, 36.333333333333336], [1271.0, 102.0], [1275.0, 6.0], [1267.0, 106.0], [1263.0, 102.66666666666666], [1259.0, 3.666666666666667], [1251.0, 6.0], [1247.0, 4.0], [1243.0, 4.0], [1239.0, 5.0], [1235.0, 4.0], [1295.0, 5.666666666666667], [1291.0, 53.5], [1287.0, 206.5], [1283.0, 6.0], [1335.0, 37.0], [1331.0, 208.0], [1339.0, 9.0], [1343.0, 52.0], [1323.0, 155.5], [1319.0, 58.5], [1299.0, 205.5], [1303.0, 205.0], [1307.0, 66.0], [1311.0, 7.666666666666667], [1351.0, 223.83333333333334], [1407.0, 132.25], [1363.0, 32.5], [1367.0, 83.37499999999999], [1375.0, 10.0], [1347.0, 261.0], [1371.0, 9.5], [1379.0, 79.0], [1383.0, 116.0], [1399.0, 9.5], [1395.0, 10.0], [1359.0, 48.99999999999999], [1355.0, 292.5], [1391.0, 209.0], [1387.0, 210.0], [1467.0, 104.0], [1471.0, 49.25], [1463.0, 12.75], [1443.0, 82.0], [1459.0, 10.0], [1455.0, 10.0], [1451.0, 310.5], [1447.0, 191.2], [1423.0, 10.0], [1419.0, 11.0], [1415.0, 95.8], [1411.0, 188.11111111111111], [1531.0, 23.5], [1499.0, 76.16666666666667], [1519.0, 191.14285714285714], [1515.0, 85.72727272727272], [1511.0, 123.6], [1507.0, 138.0], [1535.0, 10.0], [1491.0, 166.41666666666666], [1495.0, 87.8], [1487.0, 251.83333333333331], [1527.0, 175.6], [1523.0, 61.6], [1483.0, 71.33333333333334], [1479.0, 55.4], [1475.0, 60.5], [1503.0, 79.15384615384613], [1547.0, 203.875], [1543.0, 176.94117647058823], [1539.0, 234.8571428571429], [1563.0, 86.5], [1559.0, 10.0], [1555.0, 109.0], [1567.0, 94.25], [1599.0, 125.0], [1595.0, 171.2], [1591.0, 220.16666666666666], [1551.0, 125.25], [1587.0, 215.00000000000003], [1571.0, 300.6153846153846], [1575.0, 7.0], [1583.0, 138.5], [1579.0, 293.3333333333333], [1663.0, 305.40000000000003], [1655.0, 201.5], [1631.0, 231.0], [1607.0, 409.0], [1603.0, 143.33333333333331], [1611.0, 278.45454545454544], [1623.0, 147.7142857142857], [1627.0, 9.0], [1635.0, 256.8], [1639.0, 151.71999999999997], [1643.0, 169.53846153846155], [1647.0, 175.0], [1679.0, 108.66666666666667], [1667.0, 92.0], [1671.0, 51.8], [1715.0, 81.0], [1675.0, 114.33333333333334], [1727.0, 111.0], [1703.0, 281.4], [1699.0, 222.0], [1711.0, 220.0], [1707.0, 221.33333333333334], [1723.0, 40.333333333333336], [1719.0, 101.5], [1687.0, 366.909090909091], [1691.0, 197.5], [1695.0, 209.5], [1683.0, 191.2], [1739.0, 55.8], [1779.0, 126.0], [1731.0, 149.0], [1735.0, 221.0], [1743.0, 93.66666666666667], [1747.0, 86.30000000000001], [1751.0, 78.5], [1759.0, 197.0], [1755.0, 70.5], [1791.0, 4.0], [1783.0, 149.25], [1787.0, 111.0], [1771.0, 379.9166666666667], [1763.0, 311.8333333333333], [1767.0, 212.5], [1775.0, 214.8], [1807.0, 297.6666666666667], [1819.0, 241.25000000000003], [1823.0, 276.0], [1843.0, 172.77777777777777], [1851.0, 20.0], [1847.0, 320.0], [1835.0, 120.125], [1831.0, 293.5], [1827.0, 98.5], [1855.0, 72.0], [1839.0, 151.375], [1811.0, 54.5], [1815.0, 219.99999999999997], [1795.0, 180.50000000000003], [1799.0, 321.0], [1863.0, 113.0], [1911.0, 0.0], [1887.0, 2.0], [1859.0, 120.0], [1919.0, 148.0], [1871.0, 307.0], [1867.0, 21.0], [1883.0, 2.0], [1875.0, 345.25], [1899.0, 85.0], [1915.0, 119.0], [1907.0, 19.0], [1931.0, 107.5], [1971.0, 160.5], [1935.0, 233.33333333333331], [1951.0, 119.25], [1927.0, 290.0], [1923.0, 244.5], [1939.0, 170.0], [1943.0, 66.66666666666667], [1979.0, 112.0], [1983.0, 238.66666666666669], [1959.0, 265.0], [1955.0, 136.5], [1975.0, 221.6], [1967.0, 273.1111111111111], [1963.0, 130.33333333333334], [1947.0, 85.66666666666667], [2043.0, 131.14285714285717], [1999.0, 277.0], [2035.0, 265.1666666666667], [2039.0, 314.5], [1995.0, 118.8], [1991.0, 264.2857142857143], [1987.0, 240.66666666666669], [2015.0, 141.125], [2011.0, 269.83333333333337], [2007.0, 261.0], [2003.0, 305.8], [2019.0, 273.7692307692307], [2047.0, 175.2380952380952], [2027.0, 189.8571428571429], [2023.0, 244.875], [2031.0, 147.5], [2078.0, 194.5], [2054.0, 75.33333333333333], [2070.0, 264.28378378378386], [2062.0, 175.625], [2110.0, 197.5], [2102.0, 131.3684210526316], [2094.0, 139.5], [2086.0, 140.66666666666666], [2134.0, 126.39999999999999], [2142.0, 290.8], [2126.0, 101.21428571428572], [2118.0, 248.57142857142858], [2174.0, 118.0], [2158.0, 340.0], [2166.0, 136.0], [2150.0, 153.5], [2198.0, 110.8], [2206.0, 122.42857142857143], [2278.0, 13.5], [2190.0, 71.0], [2286.0, 285.75], [2294.0, 106.23076923076924], [2302.0, 229.0], [2270.0, 37.333333333333336], [2262.0, 262.6], [2254.0, 356.6], [2246.0, 239.0], [2182.0, 121.4], [2230.0, 247.12499999999997], [2214.0, 204.66666666666669], [2222.0, 196.8], [2238.0, 282.3333333333333], [2334.0, 106.8], [2406.0, 214.91666666666669], [2414.0, 167.0], [2422.0, 184.30769230769232], [2382.0, 123.38095238095237], [2390.0, 241.0], [2398.0, 379.3333333333333], [2374.0, 220.83999999999997], [2430.0, 368.8], [2358.0, 115.33333333333333], [2342.0, 135.0], [2350.0, 190.16666666666669], [2326.0, 281.1875], [2318.0, 118.14285714285715], [2310.0, 74.77777777777777], [2366.0, 163.15384615384613], [2454.0, 82.875], [2438.0, 130.33333333333334], [2494.0, 50.39999999999999], [2446.0, 126.50000000000001], [2542.0, 122.7], [2534.0, 112.5], [2462.0, 200.34482758620686], [2550.0, 244.33333333333334], [2502.0, 114.25], [2558.0, 106.0], [2510.0, 92.33000000000001], [2526.0, 167.5], [2518.0, 276.14285714285717], [2486.0, 174.66666666666666], [2478.0, 126.85714285714286], [2470.0, 54.66666666666667], [2582.0, 463.0], [2566.0, 177.0], [2574.0, 508.0], [2622.0, 20.0], [2606.0, 190.0], [2614.0, 279.8888888888889], [2598.0, 35.0], [2670.0, 180.875], [2590.0, 205.5], [2662.0, 504.5], [2678.0, 124.5], [2638.0, 64.5], [2646.0, 192.96296296296296], [2654.0, 102.0], [2798.0, 143.58333333333337], [2718.0, 215.14999999999998], [2710.0, 315.5], [2694.0, 43.0], [2702.0, 5.0], [2806.0, 91.8], [2814.0, 337.5], [2766.0, 36.666666666666664], [2758.0, 3.0], [2782.0, 72.0], [2774.0, 201.87499999999997], [2726.0, 134.44444444444446], [2846.0, 146.0], [2918.0, 74.5], [2822.0, 146.0], [2830.0, 56.5], [2870.0, 108.66666666666666], [2862.0, 2.0], [2854.0, 1.0], [2878.0, 91.8], [2886.0, 2.0], [2902.0, 343.3333333333333], [2894.0, 403.0], [2910.0, 189.8], [2934.0, 348.0], [2966.0, 1.0], [3054.0, 425.0], [2958.0, 310.1666666666667], [2982.0, 161.0], [2998.0, 89.00000000000001], [3014.0, 84.0], [3022.0, 0.0], [3182.0, 346.0], [3126.0, 260.14705882352945], [3134.0, 241.4], [3118.0, 389.3333333333333], [3110.0, 216.94117647058823], [3190.0, 414.6923076923077], [3150.0, 403.5833333333333], [3142.0, 331.5833333333333], [3158.0, 412.1428571428571], [3174.0, 506.1538461538461], [3166.0, 432.1111111111111], [3086.0, 384.0], [3094.0, 139.14285714285714], [3102.0, 372.00000000000006], [3318.0, 158.42857142857142], [3230.0, 141.33333333333334], [3302.0, 378.3333333333333], [3254.0, 154.0], [3270.0, 120.6], [3278.0, 188.0], [3286.0, 108.0], [3326.0, 82.83333333333333], [3310.0, 175.85714285714286], [3342.0, 383.0], [3438.0, 159.8461538461538], [3334.0, 168.36363636363637], [3350.0, 234.75], [3358.0, 327.0], [3366.0, 281.5], [3374.0, 145.33333333333334], [3390.0, 293.5], [3422.0, 303.70588235294116], [3414.0, 348.0], [3406.0, 426.0], [3398.0, 189.2], [3454.0, 115.0], [3430.0, 166.2], [3446.0, 215.0], [3470.0, 284.0], [3510.0, 274.75], [3502.0, 326.0], [3518.0, 344.6666666666667], [3486.0, 283.53333333333336], [3558.0, 305.2857142857143], [3550.0, 275.3928571428571], [3542.0, 361.625], [3566.0, 235.41666666666666], [3574.0, 392.7692307692308], [3582.0, 544.8571428571429], [3534.0, 380.5], [3526.0, 353.4], [3590.0, 322.9090909090909], [3606.0, 515.0833333333333], [3598.0, 371.25], [2151.0, 133.375], [2055.0, 124.08333333333331], [2111.0, 199.35294117647058], [2071.0, 230.96240601503766], [2079.0, 145.25], [2063.0, 159.625], [2135.0, 114.66666666666669], [2143.0, 285.5], [2103.0, 212.28571428571428], [2095.0, 152.85714285714286], [2087.0, 200.8], [2127.0, 99.77777777777777], [2167.0, 84.08333333333333], [2159.0, 224.875], [2175.0, 95.5], [2119.0, 106.44444444444443], [2295.0, 225.75], [2207.0, 99.22222222222223], [2279.0, 52.5], [2199.0, 79.5], [2183.0, 128.0], [2231.0, 251.57142857142858], [2239.0, 470.0], [2223.0, 265.1666666666667], [2215.0, 56.66666666666667], [2263.0, 102.33333333333334], [2271.0, 169.125], [2303.0, 129.66666666666666], [2255.0, 335.875], [2247.0, 434.57142857142856], [2335.0, 192.0], [2367.0, 179.05], [2311.0, 100.54545454545456], [2383.0, 115.99999999999999], [2391.0, 216.75], [2399.0, 341.875], [2343.0, 183.38461538461542], [2351.0, 251.66666666666669], [2359.0, 194.99999999999997], [2327.0, 175.0], [2319.0, 352.6666666666667], [2375.0, 256.9473684210526], [2431.0, 179.8], [2423.0, 152.6], [2415.0, 73.75], [2407.0, 210.0], [2447.0, 22.199999999999996], [2487.0, 170.0], [2479.0, 86.33333333333333], [2471.0, 25.0], [2455.0, 270.4], [2463.0, 128.57142857142856], [2519.0, 210.8], [2559.0, 58.5], [2551.0, 232.5], [2543.0, 114.0], [2535.0, 116.91176470588232], [2503.0, 83.375], [2511.0, 245.57142857142856], [2495.0, 236.75], [2439.0, 169.28571428571428], [2575.0, 217.5], [2567.0, 79.0], [2623.0, 59.0], [2631.0, 5.0], [2679.0, 151.99999999999997], [2687.0, 301.0], [2591.0, 259.0], [2671.0, 118.0], [2639.0, 6.0], [2647.0, 131.4], [2655.0, 1.0], [2607.0, 38.5], [2599.0, 105.66666666666667], [2615.0, 226.75], [2791.0, 318.5], [2735.0, 50.0], [2751.0, 202.0], [2695.0, 236.0], [2719.0, 167.57142857142858], [2711.0, 148.4], [2703.0, 5.0], [2799.0, 90.83333333333334], [2815.0, 201.04545454545456], [2767.0, 171.22222222222223], [2759.0, 138.2941176470588], [2775.0, 139.375], [2783.0, 1.0], [2727.0, 213.7619047619048], [2839.0, 276.57142857142856], [2879.0, 351.0], [2847.0, 1.5], [2871.0, 348.0909090909091], [2903.0, 249.0], [2935.0, 152.0], [2831.0, 141.0], [2823.0, 180.75], [2911.0, 62.0], [2895.0, 462.8], [2863.0, 123.0], [2855.0, 101.0], [2959.0, 668.6], [3015.0, 54.714285714285715], [3063.0, 209.33333333333334], [2991.0, 2.0], [2975.0, 52.0], [3103.0, 322.05882352941177], [3175.0, 535.5], [3143.0, 383.8888888888889], [3151.0, 305.6875], [3159.0, 250.0], [3095.0, 175.5333333333333], [3087.0, 344.0], [3079.0, 238.75], [3135.0, 226.49999999999997], [3127.0, 224.56818181818184], [3111.0, 240.33333333333337], [3119.0, 154.66666666666666], [3183.0, 519.25], [3191.0, 267.8125], [3167.0, 390.3333333333333], [3311.0, 83.83333333333333], [3263.0, 207.86885245901638], [3271.0, 116.5], [3279.0, 44.666666666666664], [3287.0, 80.0], [3295.0, 358.5], [3319.0, 461.1176470588235], [3327.0, 162.9], [3303.0, 94.25], [3343.0, 42.333333333333336], [3359.0, 191.33333333333331], [3335.0, 179.0], [3351.0, 331.0], [3391.0, 284.0], [3375.0, 219.0], [3367.0, 365.5], [3383.0, 123.0], [3439.0, 106.0], [3431.0, 145.5], [3447.0, 269.72727272727275], [3455.0, 230.25], [3399.0, 458.5], [3407.0, 348.0], [3415.0, 114.0], [3423.0, 529.0], [3487.0, 345.09803921568613], [3511.0, 302.1666666666667], [3495.0, 318.4], [3519.0, 280.0], [3559.0, 165.0], [3551.0, 279.69230769230774], [3543.0, 317.875], [3575.0, 348.8666666666666], [3567.0, 262.4], [3583.0, 221.0], [3527.0, 315.0], [3535.0, 477.0], [3607.0, 457.55714285714276], [3599.0, 479.0], [3591.0, 521.5], [1.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[2327.072549999998, 222.86184999999995]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3610.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 20760.4, "minX": 1.73242164E12, "maxY": 678334.35, "series": [{"data": [[1.73242164E12, 678334.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73242164E12, 20760.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73242164E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 222.86184999999995, "minX": 1.73242164E12, "maxY": 222.86184999999995, "series": [{"data": [[1.73242164E12, 222.86184999999995]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73242164E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 44.37985000000007, "minX": 1.73242164E12, "maxY": 44.37985000000007, "series": [{"data": [[1.73242164E12, 44.37985000000007]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73242164E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 180.8232500000004, "minX": 1.73242164E12, "maxY": 180.8232500000004, "series": [{"data": [[1.73242164E12, 180.8232500000004]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73242164E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73242164E12, "maxY": 3561.0, "series": [{"data": [[1.73242164E12, 3561.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73242164E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73242164E12, 429.10000000000036]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73242164E12, 1215.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73242164E12, 107.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73242164E12, 732.6500000000005]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73242164E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 59.0, "minX": 29.0, "maxY": 3507.0, "series": [{"data": [[8201.0, 97.0], [70.0, 1102.5], [9733.0, 116.0], [29.0, 3507.0], [1967.0, 59.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8201.0, 201.0], [9733.0, 201.0], [1967.0, 134.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 9733.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 29.0, "maxY": 3507.0, "series": [{"data": [[8201.0, 97.0], [70.0, 1102.5], [9733.0, 116.0], [29.0, 3507.0], [1967.0, 57.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8201.0, 0.0], [9733.0, 0.0], [1967.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 9733.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 333.3333333333333, "minX": 1.73242164E12, "maxY": 333.3333333333333, "series": [{"data": [[1.73242164E12, 333.3333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73242164E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 80.46666666666667, "minX": 1.73242164E12, "maxY": 252.86666666666667, "series": [{"data": [[1.73242164E12, 80.46666666666667]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.73242164E12, 252.86666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73242164E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 80.46666666666667, "minX": 1.73242164E12, "maxY": 252.86666666666667, "series": [{"data": [[1.73242164E12, 252.86666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.73242164E12, 80.46666666666667]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73242164E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 80.46666666666667, "minX": 1.73242164E12, "maxY": 252.86666666666667, "series": [{"data": [[1.73242164E12, 80.46666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73242164E12, 252.86666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73242164E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

